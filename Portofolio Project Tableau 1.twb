<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='PortofolioProjectTableau1' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0fgm6ke11qsdou107fsr002e004d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1jpjj7f0pb4qib14c1gke1onhf42'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jpjj7f0pb4qib14c1gke1onhf42' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jpjj7f0pb4qib14c1gke1onhf42' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D790B8B1C37341CC9AE68A256DA6F051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D790B8B1C37341CC9AE68A256DA6F051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D790B8B1C37341CC9AE68A256DA6F051]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Sheet1 (Tableau Table 2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2023 04:50:33 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 2)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2023-05-28 16:50:32.504' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:location:nk]' palette='winter_10_0' type='palette'>
            <map to='#90728f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ff9888'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D790B8B1C37341CC9AE68A256DA6F051'>
            <properties context=''>
              <relation connection='excel-direct.1jpjj7f0pb4qib14c1gke1onhf42' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0hppgxa1nwps1y1fg6q3s0svs8bv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1ixgetn08k3kyg1b76j2h19kf4rq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ixgetn08k3kyg1b76j2h19kf4rq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ixgetn08k3kyg1b76j2h19kf4rq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_01322AEA3F2F4B779A8D4E2C3C155B89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_01322AEA3F2F4B779A8D4E2C3C155B89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_01322AEA3F2F4B779A8D4E2C3C155B89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_01322AEA3F2F4B779A8D4E2C3C155B89]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Sheet1 (Tableau Table 1).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2023 04:50:20 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2023-05-28 16:50:20.061' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_01322AEA3F2F4B779A8D4E2C3C155B89'>
            <properties context=''>
              <relation connection='excel-direct.1ixgetn08k3kyg1b76j2h19kf4rq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0y58msm0lnhclx11vjqhe064qqce' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0weg7pf04hxrxi16uiczd1oy88i8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Tableau Table 1' name='excel-direct.0iu8fv31rfyf811f3geyc0lipr5i'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Tableau Table 2' name='excel-direct.199btuy1u7hob11dqfqhe0lbjtxu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Tableau Table 4' name='excel-direct.0yt4iee1wi670z1e4zdxj0y654o9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0weg7pf04hxrxi16uiczd1oy88i8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0weg7pf04hxrxi16uiczd1oy88i8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5D6F737337FD4475A26245D6838FB0F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5D6F737337FD4475A26245D6838FB0F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5D6F737337FD4475A26245D6838FB0F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5D6F737337FD4475A26245D6838FB0F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5D6F737337FD4475A26245D6838FB0F3]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Sheet1 (Tableau Table 3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2023 04:50:45 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 3)' increment-value='%null%' refresh-type='create' rows-inserted='255' timestamp-start='2023-05-28 16:50:44.202' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5D6F737337FD4475A26245D6838FB0F3'>
            <properties context=''>
              <relation connection='excel-direct.0weg7pf04hxrxi16uiczd1oy88i8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1miqgay1enaw871h2nv0z1sr69fz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.02cdzx10ljno5l0zu1p8516fuhm2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.02cdzx10ljno5l0zu1p8516fuhm2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.02cdzx10ljno5l0zu1p8516fuhm2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AMIF/OneDrive/Documents/College/DATA ANALYST &amp; DATA SCIENTIST/Portofolio/Sheet1 (Tableau Table 4).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2023 04:51:10 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 4)' increment-value='%null%' refresh-type='create' rows-inserted='185344' timestamp-start='2023-05-28 16:51:03.762' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>468</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>468</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3658</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52174</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56800</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4E7E1313E6634C0E9DDCE7C31B732D6F'>
            <properties context=''>
              <relation connection='excel-direct.02cdzx10ljno5l0zu1p8516fuhm2' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Number&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0hppgxa1nwps1y1fg6q3s0svs8bv' />
          </datasources>
          <datasource-dependencies datasource='federated.0hppgxa1nwps1y1fg6q3s0svs8bv'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[:Measure Names]' value='167' />
            <format attr='height' value='59' />
            <format attr='font-family' data-class='subtotal' scope='cols' value='Tableau Book' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#f5e0a0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Tableau Book' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#33333367' />
                <format attr='stroke-size' value='1' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0hppgxa1nwps1y1fg6q3s0svs8bv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FE78D3EC-B4B5-4347-B72A-1F8DC7953895}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0fgm6ke11qsdou107fsr002e004d' />
          </datasources>
          <datasource-dependencies datasource='federated.0fgm6ke11qsdou107fsr002e004d'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fgm6ke11qsdou107fsr002e004d].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fgm6ke11qsdou107fsr002e004d].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0fgm6ke11qsdou107fsr002e004d].[sum:TotalDeathCount:qk]' value='99' />
            <encoding attr='space' class='0' field='[federated.0fgm6ke11qsdou107fsr002e004d].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='500000' max='2500000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0fgm6ke11qsdou107fsr002e004d].[none:location:nk]' value='115' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0fgm6ke11qsdou107fsr002e004d].[attr:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-color' value='#ba9582' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fgm6ke11qsdou107fsr002e004d].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0fgm6ke11qsdou107fsr002e004d].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{FCF897C3-26A6-4DA0-B2FC-CDFC3B6AFD74}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0y58msm0lnhclx11vjqhe064qqce' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y58msm0lnhclx11vjqhe064qqce'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y58msm0lnhclx11vjqhe064qqce].[Longitude (generated)]' field-type='quantitative' max='16600863.186767153' min='9765873.8531577401' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0y58msm0lnhclx11vjqhe064qqce].[Latitude (generated)]' field-type='quantitative' max='1965144.108150431' min='-1284870.6247025698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0y58msm0lnhclx11vjqhe064qqce].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0y58msm0lnhclx11vjqhe064qqce].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y58msm0lnhclx11vjqhe064qqce].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.0y58msm0lnhclx11vjqhe064qqce].[none:Location:nk]' />
              <geometry column='[federated.0y58msm0lnhclx11vjqhe064qqce].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0y58msm0lnhclx11vjqhe064qqce].[Latitude (generated)]</rows>
        <cols>[federated.0y58msm0lnhclx11vjqhe064qqce].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1D9CD1C8-B930-41A9-89BA-8FA21FE3356A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1miqgay1enaw871h2nv0z1sr69fz' />
          </datasources>
          <datasource-dependencies datasource='federated.1miqgay1enaw871h2nv0z1sr69fz'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1miqgay1enaw871h2nv0z1sr69fz].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]' />
              <text column='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]' />
              <color column='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Forecast Indicator:nk]' />
              <text column='[federated.1miqgay1enaw871h2nv0z1sr69fz].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1miqgay1enaw871h2nv0z1sr69fz].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1miqgay1enaw871h2nv0z1sr69fz].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{1FC19ABF-679B-454E-8873-EE3AC30CFAF3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='98728' x='636' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='98728' x='636' y='940'>
              <zone h='22092' id='3' name='Sheet 1' w='42114' x='636' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='10' name='Sheet 3' w='45947' x='42750' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='12' name='Sheet 4' w='45947' x='42750' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]&#10;[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Forecast Indicator:nk]' type-v2='color' w='10667' x='88697' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0y58msm0lnhclx11vjqhe064qqce].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10667' x='88697' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='147' h='76028' id='9' is-fixed='true' name='Sheet 2' pane-specification-id='1' param='[federated.0fgm6ke11qsdou107fsr002e004d].[attr:location:nk]' type-v2='color' w='9386' x='33364' y='23032'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='76028' id='5' name='Sheet 2' w='32728' x='636' y='23032'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='98728' x='636' y='940'>
                <zone fixed-size='168' h='22092' id='3' is-fixed='true' name='Sheet 1' w='42114' x='636' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='10' is-fixed='true' name='Sheet 3' w='45947' x='42750' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49060' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0y58msm0lnhclx11vjqhe064qqce].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10667' x='88697' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76028' id='5' is-fixed='true' name='Sheet 2' w='32728' x='636' y='23032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='76028' id='9' name='Sheet 2' pane-specification-id='1' param='[federated.0fgm6ke11qsdou107fsr002e004d].[attr:location:nk]' type-v2='color' w='9386' x='33364' y='23032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='12' is-fixed='true' name='Sheet 4' w='45947' x='42750' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49060' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]&#10;[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Forecast Indicator:nk]' type-v2='color' w='10667' x='88697' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C87A384C-30F9-4FBB-B507-8B4BABCC48EA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='152'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D0014F06-C640-4FDD-955F-FEED50A2675B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0fgm6ke11qsdou107fsr002e004d].[attr:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C4E87A87-E4CF-41AB-B340-47EC5F761B3A}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0y58msm0lnhclx11vjqhe064qqce].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0BA834EB-9DEE-4619-A773-ED8F00C360E6}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Location:nk]&#10;[federated.1miqgay1enaw871h2nv0z1sr69fz].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B2BC9B21-64CC-4A11-A4E3-FB0AA19FB7C3}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{5B43D6DE-7D26-48EF-A9B6-F77B0810C43B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='83' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABTCAYAAADJLgjqAAAACXBIWXMAABJ0AAASdAHeZh94
      AAALRklEQVR4nO3deVgU9x3H8bcrrKIiaAJrBLzweoK3EjBEFCpulBoaj6RK6+NDHx4jRI1g
      Uw2xptQaFWIw6iKNf6BGbMWjJcGi8qjwhABKwAMJVkldz1gSjojLAsvaPxCVwrKHKyDze/2F
      M9+Z38F8hpkBd7o8ePDgAYIgUbL27oAgtCcRAEHSRAAESRMBECRNBECQNBEAQdJEAARJszFW
      oFHvbot+CEK7ED8BBEkTARAkTQRAkDQRAEHSjN4EC9aR9dk21mQYWvsiS7YtILj/s+7F9/xl
      7lWmHZqBj8EaLYVHM9hx8HsuVeqw7enIWH8f1iwegtOz7l47EAFoIz7Ll5G5/OE/bufxuy2w
      LnYSA8zeUzn7VqVBxLMIjJasz/YRUzmWP27yY6yTHKrLyD18i5sgAiB0bvUXsvn4+hi2b5rE
      oK4PF9r15dXgvu3ar2dJBKCjqbrDvh3pJOVXcE9ng8srnkSFT2JUL+DscXw3Xm6oW7aNBODJ
      y6efL5/ns8SzZP67Gi0y7N2HsmxZAK+7mXKrpyfndBFjZoc+PvhbYLSN+p/4Z+xR/ppfwT2d
      DHuXgSwMn07wiO4P96Cl8Eg6G4+ouX4fC7a3LhGADqWcv/85jQLv6SSudMOpay2Xjx3lDx89
      IG6TJ4M8Z5B5yNPgJZD66s9MCHmbiCH29Oiqo/RiDqs3ncF9uzfDTGi75D998Zgnb7XKWBvX
      U46T0m8aiXvdcJLruKe+QfLVMhjR0NnrKV8Sr/Hm012/xEmuo/TiGT5cfxLHuOl42xnf3trE
      U6COpPAC+198leg33XCSA13ljJg1i2WKPPbl641uPjpwCrOG2dOjK4ANTqM98O9ewe16Uxqv
      5Mb1Fxhk5Dgz1oZGU8MLbk4N/ccG+4GDCflF407vknZhEL8Pdnu03mn0q6wJuEvKmVoTtrc+
      8ROgA7n9/Q+8MHQMPZoslTNujIKkm5Xg2afV7etLr7JTlc3Rogru6RqXvsiSu4DRY8gBtwE/
      ce02+LRSa6yNkX6edPnTHoJO9CfglRH4vzaQEU5yugKU/5eighy+mJvTbL/DfnMfkLe+/TMg
      AtBZ1N9k+4ff0iU0kOQP+z48Qz98YmSSPrgPLiP1Si30N3AZZEob/T3YlDCCez/8yKWCa3zx
      8SlujJlFwmJXetTWUT14Ml+09vSrte1NHIk5xCVQB9J/SD9+unyXn5ssreXchbsMcXVofeO7
      P3DBw5PlkxoPTHPJGD95GBe+PM81Q5dMJrdhg32/fnjP9GbDliCm5BRRAKBw5uXSa5z90Vhf
      DGz/DIgAdCSjxrCgPJvoIzcorQXqa7l89Cjb7k4ieELjt6on/RQVZH5TSi1AbS2aesCuG/bn
      r3KyTAfo0ZTe4NDWYyTdML35Hp6+rBlwgfc25JFf1nB9U19dxjf7LjYcgCa0kXPgXxy6eK+h
      T+govVjCt9174wxAf5QzNKhivnli//coOplOYr4p21ufuATqUPrw9trX0e1IZ/HfHj8GXf/R
      E8/lkTNtcQAFMUeYub8GerqyLOZNfqXwYPWiO6x6L4GP7svoM3wIi347hbdvZJrRfnd8whdg
      n3KSze8lcP2+/vFvggH6GG/jZa+BfJv4D+avb+h/n+EjiIia9vAplIyRv57Hpz3+f/9eRL5m
      yvbW18XY5wKJ/w8gdGbiEkiQNBEAQdJEAARJM3oTXFTq0Rb9EIR2YTQAdnZ2bdEPQTDLqFGj
      Hn1dWFho8X7EJZAgaSIAgqSJAAiSJgIgSJoIgCBpIgCCpIkACJImAiBImgiAIGkiAIKkiQAI
      kiYCIEiaCIAgaSIAgqSJAAiSJgIgSJoIgCBpIgCCpIkACJImAiBImgiAIGkiAIKkdboPxz12
      7BiRkZGt1shkMrZs2cL06dObLL927RoxMTHk5ORQU1NDt27dmDBhAsuXL2f06NHN9mNufUuK
      i4uJiYkhPz+f+vp6nJ2dCQ8PJygoCJms5fOTXq8nLy+P2NhY5HI5O3fupFevXlabB0MsHW95
      eTmhoaEUFxcTFhZGWFhYq+2YW/80Ol0AlEolSqXS4Prdu3dz+PBhxo4d22T5iRMniI6O5q23
      3mLDhg04ODhQWVlJRkYGN2/ebPYNNre+JampqWzevJnw8HBUKhW2trZkZmayfv168vLyWLdu
      HXL545dVaLVaUlJS+Pzzz+nduzeOjo5otVqrzoMhlo5Xr9eza9cuhg4dyksvvWS0HXPrn1an
      C0BrysvLSU1NZc6cOTg5PX7rrVqtJi4ujlWrVhEUFPRouYODA2+88Uaz/Zhb35Jbt24RHx9P
      REREk31MmzYNe3t7VqxYwddff42/v/+jdXv37kWtVpOYmIiLiwsqlYqsrCyz5gAMz4MhTzPe
      3NxcsrOz2bp1K3FxcUbbMrf+aUkqAOnp6Wg0GmbOnNlk+cGDB3F2dmbGjBkm7cfc+pacO3cO
      uVzO1KlTm60bP348fn5+HDx4EF9fX2xsGr5NoaGhFrf3JEPzYIil4y0tLSU2NpaQkBDc3Nys
      Xm8NkrkJrqysJDk5mblz5+Ls/Ph9IxUVFWRlZeHv72/Sx0CaW2+IWq3Gzs7u0cH9JJlMhre3
      NyUlJZSVlVncRksMzYMhlo5Xr9ejUqkYNmyYScExt95aJBOAkydPotFoCAwMbLK8oqICrVaL
      h4dpHwJsbr0h9vb26PV6DL2fxNXVFZ1Ox507d56qnf9naB4MsXS8mZmZ5OfnEx4e3uQ+xlr1
      1iKJAKSmphIfH8+OHTuanfUqKyupqKhg48aNpKSkPDrj1tXVcerUKZRKJatXr6a2ttaiekOC
      g4OZMmUKgYGBfPXVV9TV1QFQVlZGSkoK0dHRaDSaNpsHQ8wdr06nIyoqirS0NJKTk41eyphb
      b22d/h6gqqqKpKQklEolAwcObLZeJpPRq1cv1q5d2+RJhq2tLX5+figUCpYuXUpOTg6+vr5m
      1xsik8l45513Ht3MfvDBBwA4OzsTEBBASEgIKpUKBwcjb4e00jy01k9zxpuenk5hYSHbt283
      6Uxubr21dfoAnDlzhtLSUubNm9fieoVCga2tLeXl5S2uHzBgAK6urhQWFuLr62t2fWtkMhlB
      QUFNnqw0Sk9Px87ODkdHRyMjNI2xeTDEnPFOnDiRpKQkSkpKWr3BVqlUKBQKdu3aZVZ9UlIS
      CoXCrP4b06kDUF1dzd69ewkICDD4o7Vv3764u7tz9uzZVg/YxptVc+stodfrycjIYPLkyVYJ
      gCnzYIg54+3Zsyd79uwxWBMZGYm7u3uTX2yZW29tnfoeIDs7G7VazezZsw3+VtXGxoYFCxZw
      /PhxiouLm60vKSnh9u3bjB8/3qJ6SxQUFFBQUMCcOXMs3seTTJkHQ9pivO2p0wagurqa/fv3
      M3XqVIYPH95qrZeXF0FBQbz77rucOnWKuro69Ho92dnZvP/++8yfP5+JEydaXF9UVISPjw8q
      lapJu/Hx8aSlpVFVVQVATU0NBw4cICIigqVLlzJ48OA2nQdD/TR3vM+TTnsJlJuby5UrV1i5
      cqXRs17jDem4ceOIi4tjxYoVQMOjyLCwsGZnTnPrc3Nzqa+vx8vLq0m73t7eqFQqoqKimvxt
      TUJCAiNHjmxSW1VVxZIlSzh//nyz/nt7ez/6WqlU8sknn1g0D4b6ae54nydGX5R96dKltupL
      p9R44I4bN47IyMgOe6A8L/1sJN4R9pz47rvv0Gq1LFy4sEMfVM9LP61NOiNtB3q9ntOnT7No
      0SJcXFzauzsGPS/9fBbEJZDwXBKXQIJgBSIAgqSJAAiSJgIgSJoIgCBpIgCCpIkACJImAiBI
      mgiAIGkiAIKkiQAIkiYCIEiaCIAgaSIAgqT9D58FuBXfP2FjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9+ZNc13Xn+bn3vi2XysqsvQpV2AkCIAGSIilSki3LWmyrO9x22N3unumJ
      6XFMzG/jiPkD5g+YnyZion/smI6JiXbMeLxEuFstWbK1WLIWUtxXEGsVUCjUnlW553vv3js/
      3PcyqwAQBAiAhJYvo4jKrJdvy3PPO8v3nCNe+/tv2tUbqyxMVJmulNjc3sW30EkSDo1XkVJi
      jKXT64GUNOMUrTWFgs9EucBOJ6bZjykWAqqFEOkpBAIHC9nv1lqMllgpkVikMBhrAIm1lq12
      l2Y/4chUlW4/pd1qMTVSYC/yvWqT/S5AiPxvAosdHFIgszOwGG2RanhKFgFWZNuBEBYEGC2Q
      0vLhsOR/tVYghc0OJ/Ztsfc1+36/aT92eP7Dq5BYzJ57JyB7bQFjxJ5rt/s+OTw7h0474Z+W
      N1gZPwLHn77DdT0g6BSUB0kfG/cRQQR+8PCPex/wDhc92kmHo0GZrc1V4nqTrXaXY9UR9EYf
      KwXGWEIsxlgqaYoRgjevN5mtlPB9j0rkMWYiRLeHUmqwc2PcF6xTMChi4RNKg281SpnBF3Z1
      q4mQgqPVMl63QSAEl64vY0oh89USIpOSXLCkMZmAC4S0AxEz1iCE3COAAmOMe51tlx9ToGg1
      e3i+j+8rsGBSjQokRlvSVON5ijRN8XyPNNVEBQ9rzWDf1oKU+2+otW4BuHPOfwbLZrCdNiAF
      cJMQMzjLofIQgLEWo8FX2THyhS8ERoNUw/sNFiEEnZ7l4uEX2IhqiHj4vTwsWCMQWiLqTWR9
      DX30LMQP/bD3BQ8MpVBhrabZ67PR7vLM9Bi+56GURKcpylMYYxHG4vseSEmt16eTJDw1UwMB
      UgikUlhrsy9IkCbgex6x9NAIIqEJpcYYJwrWQqPTY7PV5anDM0gpB8I+Vh2lEadstntMlt2T
      INeuItf81mJv0qJisB3obKFIKZ1IWbtnC5BSkiQJuWBaY2k1+wRBQKo1cZwSBB79fjJchMIJ
      vtECqfZrXJu/HJzQrYI/2NaAVRayBYO4ebHs/Vx+bPfeXuHPt9I6+7R1G1oLlxpdNmanEd4n
      o4WFlNidDWwQYY+e/USOeb+QnTgl8n2EUHjKoxb5hIFESoG1BuU5gVMKfB+8wOIpeHqmSoSg
      rw1KKUSmCq11ZkiaQBh4aOkhhWDUS/cIv+Wd61u8e2Ob7b5mp9PnyvrO4KQEgiPTNRYmRumn
      Zt8J20y7gUVInCmD0/7W5prTYjLBktJmZpDMnhr5j8APFGHgI4XAU4owDFBKEkU+nicplkKC
      0EMpRRIn2fU54RcfYioJ8idQfpwPufEyW7wDLZ8vgJtgs3vqNkIIMfjJoZT7EdIOdvHKtU3+
      sXj0ExP+AcICojjyyR7zPuBFvsdGqpFSMlcr89L6Nt3YEAaGzFpnq9NlJAwIfYExErD0+ind
      OKYfa3zhZdrb2cbWAspDCEliBCWpMdpiLCRG8+7KJifnp4i8ACEsc7UKnX5/8OTIzRRPSlr9
      9I4XIIQl1QYpnUbPRWm4FLL/CYuQzlLOpSQIPLcP5GDr8kgRMEQFLzuCJYoUUVSEgY+RPWG0
      wPP2mzDittp/r2BnJphwJgM3LaSb7XgAY4V7Unz4ehosEilgp5/wcmGercPP3NYDeRjQNxaR
      kwewSR9RKH9CR71/eIFS9BONNhbf83j+xCEWN+p02zFxL8b3PSZrFZY6PTq9mGIUYC2Evsfh
      uWmq5SJKikz4nbvWNR7WCkI0BZE6U0Rarm00aSYJZw7NoIRCSOfcBZ4g8KKhpsug9hjYe528
      XIydPO51FnPn17iFZLLlIBiYZtbuMaEyOKfTYXOjTqEQUSz7ww322ukSFGD0be5mZqIMXeO9
      Wv1m82ZwAe78hsv15i2APU78h0AIQZwa/vb8Cjd0wNpvfh1xpxXzAOD8IQHdFqK5zdilV6h/
      4Y8f6jEfNLzlnTaBF/Bf3rzEi0fnibXmxOwUSuZOVWZzjlcZfqkO2kJiBZ7IBEhoJJaSigGJ
      1oAwSAXL2y0qlQKHSjX3WW2RAoSQ+wTf2djutZIit3BuFX6G4iKli+q4c82E/CZhcu9nDqUR
      KLVXMw+3HRkpozzJ7YRxz95IkhTPc1JpjbtXTlD33CFxq/4daPjMnDHW3YfbHS9/lpk7ncoe
      pMayFcPa6S8gvABrNOKjVs7HgDXaXbDR4IeIfofSlTepv/DPb3vNjzK8+VqFZtLFSsFmp8/V
      zTrGWibKRTr9hJlqia6WBNLiCUFHCwyCSBhiKwhlrj2H35KLhLiF45SQoJ+m1HxvsE3uzMLQ
      sbz53m002lRDf5+9mx9qr5C5KIkzv0C437OISP7kyB8muY+Sa69htMbtOIwktzNDBtclBHE/
      BStJU4u1Eq0NOk2RUoEAnaaUytEerX5zaHR4x6yx+YkO7steGPNRodkhPCnoTBzEBAUWdIP2
      +68w/vhZtoqTTLZWaVbn6KYGC5QVqJ01lgvTd7Xvm24ENLchLGLbu5Quv0HryFlkdere9/Up
      wwPBUn2X544dBARPHZrl0toW765s4ilJqVQhkBqMRQsIpCDVAmMNgXChOStB2DzaYsAKjBUY
      bfADhbWGUHnsNLsUxsqZE5cLo3BPCnAa1drMjLFc325wulYi7huCULmw415tKSCNDTq1SCVR
      gyiUQUpBmhqMcOcihXVRCpM90fZZB3sW7x2EP4cQAm00SeKEPr8WIQzWgPK87PXwqXN7Y9zu
      e/9m4bd3qfnzT+/0ElrVg4ioRCuqUisXmQwlzZ/8DdHsHHb5PKExiDSlWC5RlyWYv/cFIJQH
      tWmsMYiwQPfwWcQ9Cr9tN6A4cqty+4ThARR9n8WNbY5MjQFwfGaC4zMTvLK4SkHFeHLoTFot
      UGKPRtWgU0u/13dxeASe52GcTUC/n6A8xY16iyfmp8lVfW4lW2vRqYvgGOPR7XTxPI/EGNJe
      TBpHaGOI+5JUpxSLEX7gDi6si4/3en3CMBjsK/dH8oiRFILUWECT5w6K/h4bf2Bpf7jEDUKO
      FqRUeL4kKvoYbTLnez9ywd/v/t66//yjufDv3UYbgZL2QxbPLUekkxr6tUnkSI2utkz6AVs3
      rqPTFJMmxL0u0g/pthpURsqDY9nMnBGe/xHH2A8X+ZPY8dl7d7bT+BNz0O8E0fjZ923QabDW
      bLG80+LswVmiwEdbeOvqKk/MVNyXwH77fM8uSBNLEmuUclGYVGuwFuUphBB8sLpJMYqYH68Q
      RgqXoMpDgYJOq4/yPJeMMobdXszF5RWemq7hSYHne+hUY4yhUAzZk2vLssLOLDHGEIQ++2M9
      sNcBbbe7KE9SLoeDv7mFu+cD1u0Xcl/BmbzWZske6RTAMOAzjDvli9oiUHJ4BnkewprMWZf7
      cwnOWd9zb60z626ztvYhT7ydb8S8uxNzsZWy88X/BiElo75AWwgkeEIwXl9is3aIOPO/Egut
      1A6+009bG38a8KQApZyWLAceL128ym+ePIpGMhKFvLuyyWjkE3oe7TghNZpKGCAEtPoJB2oj
      FAIfqXyUyr5ULTItbdHG0rOWJ2arLqojBg+BgSlUHsmEUQhWtpusbG/zm4/NEvdSlCfxPAGR
      GqpVhhpTKReSLBS9PY7yXuSv3PmURwrOhNEWpfZGX4aCq7NQrxIWnWYx/0wYbeZoD/ctWFut
      Uxktu3OwYK3M8g9kgpwvjCx/ITKnWVhn44tM2PcsbJs59R8FgeD99V3ebMFbU08iTh4c5GR2
      E5vvjNruCrtxl3W/h7iJnvCrKPg5PAtc29xlaWuHp44scHzGI441UsFCbRRTKTnBt4aiVVRH
      SjR6MUZrRsKQD1abTJQDDtRKmdkhcNaFk3QpLL7MhCyP6NibYuCD+29Z297h2QNVhJCEBbXH
      Dt5vCuw1Ffb+ni+MODYkiaZUCtgbi1cqi0BJizbZs0JAbCUiC5MqaUmR+FJjhRN+kQmnuMWg
      t9TGRvF8l03PNbwxTrvnoVen3cXALlJieN7W3Crs2rhzvV1wYO+1WgTnxSjvnHoBURq91YzR
      KWeXfsrTaZ2ChO/urnLxsS/efoe3geP0hB+94S8oZD/RrDZaHJ+aQBhLs9kijvu0Wy36/T5a
      a3zAS1NGCwWSXkxRCCpBQDkMaHW7BJ6HEh7WyMw0kFxdXEFraHRjRoqFW+zk22VS13ZaBBik
      8Fm8vIw1cu/auCfo1Ayyt3tNoDwfoLMQLzgBVNaiBASeY9oFwnnmw0jWhyMIBTKLhglpB9fm
      ooUyS9JlfxPDRT/IVeRkPOOeoC6Mm4VXtRiYX3thLaTastLs8fPq41AZv60NX7n+Pn84KTg+
      N8XczASXCjN3df9st+X8snd+jN1eu6vP/CLCA/dFBIFL//t+EaUUcZwQxwmFUpEkSQiCADB4
      XoSUAmM0fW0JfMV0pYA2Gb9GuMTSwUMHAM3SVoMnDs3ue8wKMQwjI4Z27lazw3gxxKI5fGQe
      hBnYuAOW5V7rI8PAhkU4jQ0Uij6Fos/elWPs0NwZnE6W59irZNVdmh656zy8rr2OcqbhzVCD
      5865GHw+M4esAANaa7R2+wuCPPyb+Q1CEMcJQeiz2mjz5voO53oSfeBx7OHDtzVj/O0b/A/F
      DTwZYUyKkAYPQ7JnG9OsI0dqYC2224SdDWxQQFTGXQDhmd/+yHtxr7COT+KiSZ8yZCFQnFmY
      Yrvd4tzqBkHg4XmSQiGkUinheYIwDAgCjygKUJ5CeZIbzSZvLF3lqfnpzJ417isdCGjKjd0m
      U7XKPmfQwdnfUjIwGQAem51kabcL1pKalFQbEm1vI/y5oA0dOLfXmwX3pmQYmd8h80V4mzjN
      XccexeC/m8/FpRaGZte+EOrNHop0fozyLEpJjNYYrel2usSxptXs0uv26Xb6JElKp9OngCDx
      iojpQ2yf+NxAkCTgiyzCawwv7p5johBmCx/eWt2lPzG///gZb8f2OkSv/B2ivYuoTg7Mnpt5
      Rw8C7jt4+OzUu4EHgtDzODZZ463rG6RZhEDKXJOJQdTFGEsviXntyjUWxso8f2SGwBvar9bC
      zy6uUIoCioGi3u7x/ImDH3pwY0SWDHKC0O7HeMCba7tYqdDGstto8uUTc+SsgTQxJLEmjHyU
      J4n7LtcwTDbZPT/7kfOMBqHHzAl1J4/L4grotlOC0M/MlptdakGaWueYZ8dze70dN2L4mT0v
      ssPtfTJle7LuHJWnXB2GNviBj6ekc87TlMRY3qp3uF6eIaqODxxegFOyQf/nf8/46c9wY3Wd
      ZyOD0e7eamNYEkXmWqt0Skdp6CyUnC0eUSjRe+7riEL5k3GKHxHHe/AM6sYpCImnXCbVGOhZ
      SWAsvnTCD3B5fYvfPHEAIWBps4kxliNTFcA5isXQ49TCNHGaEoa92x7UaXO3cGSmiYWFyPOZ
      m5lgplpGCNjt9FlG79OgWjuzqN3qEYQ+YRjQarQRQqJ1SmW0dEebfW+83cnOHt/ACIRyx+h0
      enhK0Y9j/My2dp9xSZFubr8J8H1JEKp9gpOzRpW6OY6/J9aaoZGGlFSK72s832fgs1hJHp9N
      U8tWYvmra03Wzn4NWZu5ZYmf7wecKFdgd4tTu4sUytM0m22klEilaKxcZ6KfsDkyRiMcu/Xe
      /AKxOB8UBgsg9BWdfj/jpgi0gUhZ2lqSWotnHQ3a0aSdqbOy2yL0fQ5lnwFchEMKIt9jrla5
      5YC57euyv05AbMbLiQLJTFCGzJQaLYYsZtRlB4uUgqAUksQpSZxSKPgopVBKEYRe5jfsPaK8
      JcIy0L4W9J4QZa5Mg8AjSVOMsXjKczUQ2bXlYU0/K5LRjvCEFGoYUs2iXPIm4R/SsS3Dqi+o
      +fFN5lu2DwQSRbsb8+2VXd4pH6J39nOI2vQe+t4QvY0V2rUDbDUbvDA9QRQFBIGPxbLZbJMe
      eZLizAKpV77noMIvKwYLQElJ0fdY2qxzdHLcEcusZUQZelbQNxJfWA5NjPG996+wMDbCkwen
      2Wh0aPcTRiIXWw49bxDduDmJk1McXNFGpoFF/kS4faZUKEUv0US+07C5uRNGijBSWMw+5mb+
      tNhjYAySUzB0VBvdmKXNXfpJytn5GYJgKKlBpAjyirPszBnsdeg3+IGi34sJAuds59sO8hG3
      aH4xcJ73Vn/dFpktbwz89Rvn0V/9N/TUGCIs3H57QJQqXCnO44lVSv6iu8fKYozhcgyXDj2F
      cMmPXyPDPhF9Ym6Sdi8eRGaMcaaPZ0yW4LGMRAGFMGSnExP5PlEQ0ui6urdLazvEGSsSuDkj
      Rf6mEJkg2CGtOKck31zwcWphiiutmB8ubbLW6LDPvrcSnd5ko4t9rimQFcsMTB3ACt6+ts6p
      WsST42XeWV7l/Rt1lrdbrDW6pHpI8Mv/A4HRucAaHOXaEhWCIS1ksO0tV7xH4CFODVvtmL3F
      OcOblSXMrCTRlvfqbbq//a9ZKh24o/ADLnLjBwRY0pzzhCU1CW+pcSf8v8Y+eOCEIo4TwtBH
      Z8Keh+AAPOU48PWexhcavzzCZ2ZHQSgKpSrLK0scqJVpJwlnD885bZuFOof3fPgl2zxFOgiU
      fLhK8pXk9MIUr56/xlgpGphQ1lrSWLO1VWdmbnywD2sty/U2idYcGq9wvd6k3nFlle04ZbfT
      B6M5OV4EQAnJ2ckR+kbTjmPi2PDGVoPnjuwnicWxZvnaCkePHYR9Bohh70p3ST4GDM7bsUB7
      Scq3L63wx6cPEypBvRfz6maHoFBg0ZZAp6TRCBvFcXaPHHbF5XehtXOl0Z04yKtLV/jSpPPn
      flrXXJ89Bcbsc5p/DfDSVKN7MY1Gk5npyYyUZh09YhAtEXhC8+fvLDJWqfBmT9EMDF+dkhQ9
      jc6UskSQajMMe+750vZqwFwzWT6a6wJOqAIl8NVA1QLgh5LZuQkshlYv4Wq9hScFpt9ndiTg
      pcsrVH3FROgTpDE7/ZinJ8vZOdhBBtYiCKQzqc7XWyyMj+45Z4cgUBw5ugB3iPbYLGEl9rot
      GQa1xmlKoCQrqeIbl1YR/Q7bhSq7Rz7DzugBdKEMekhM+1ixEiF4w5vgbHcDkyZ8b/RJUP6t
      2bRfA5kkKZvNNiMjZdqdLt12l/pOg243pt3uDrRKoCQzoWU5lXjPfpWX/Tni1BJKR4LrJZpU
      Gzr9PM3icvitRkKaSDrtBGsEOnWClyQWayRJbNAppNlrZ2bsx+J6naliQKpvcmatGZhOV7Zb
      LExPIPyQUuBR9HxemK3w+ESZmZGQET/g+GjZZVqNxGhnfmhtXUQKAUhqYZjVId98HgYhbud6
      umt15qJAyiwYe5OwCSFotzus7bZ4+/o6hw7MsSkC3ttqkgpFND6NKVYQQt4zK/N22Jo8xv+Z
      zvPeboKtTiP84Ncm0G3gJcbw0+sbfPXoHD+5cp3pcpHEGN65voZBMNqLma+U+PYHS3ww+zTd
      yjQEEa3RGa7vLnK4ViBJNS8trjJajBgphOS2jZTOAeu0uwDEcZMgCIjj2NUOWBdWlNKitSZJ
      ulQqpVvK/6aqJZY3G2zWu+y22nzu0GTmPg6FTApBIfB5bGaMK+uCeq9LLcoEyQrX/cGCCyk6
      5mihEKK1Jk1jlFJonVIUkh8u3iBS80yNRvvOQxsX7ZI3hTvdvy6iNcz27rf7C8WQXWP5fjul
      q6q0Z56keKzE2POKTrdLHI1y29DOx4QICzRHZ7m4dhGEwKYJtllH1n7xilYeJsTffPfH9tJb
      r3IsMFxu9jlWCbmmfbZEiDhyFh0UkDqhXahCqTJInJhmnX+7/iOemK3yzrV1HpsZJ/BchAbI
      6M4Cq2WWQxDEcYyXRYmkynr2ZA5vkiQuxBkouA0VIadEfHB9nclAMlYM6aeaN29s88yBcbSx
      XNrp8sT8JNbCP7x5noK0fG5+DGscnybuJyjPI02SwXmA6yChUxfODIIArVPe32kxUi5ycHyE
      VBsKgccbq7v0NZyZHGEk9Gn0YkbCAOfYD027/HxvNHu825X0VcBmT3Mh8eCZL2OF+ES6NVhr
      He/e/+Uls90vxL9/d8su3VjDtHbAD5HWwvTBj/yCbNLn95a+x7HIcG2rwZMLk5SiYBiGzKq9
      pHLtSERmbjiynGu5kmqDVPamcOEdjmmdzv/5uav4EgqFkNgKqkIzVy1xsd7l1IEJwBHF3r68
      zFPjhT21B0MaMlaipOvskJdt7qvikpbNTsxGp8/Pdi2NqSM0SuPo2WN4Ny7z9ca7nBcjjJPy
      u7MFPOmiWtcaHT6IfTpBifNylJ3RWRifw3bb0O8gqpMf+8v6NR48HBlufA41PndPHxR+yEuF
      Q1Sb7yEk9BJDcZ+i2VOUYoUzH+QwUgHs0ZofjSHhDT578hDGGF66uMyxiVEu3dhkqxMjPX9A
      H1bCUQf2nVHG7EyyqjaEq2+WeeRGuZNxphvs9mO+7c2z/cJnEWVH0R71BZPdAu+Vz6Jnj6PP
      /RiTxvzo6g361Unenn2OYHwWjaBpvGFEuFCCQume7vGv8fBxX3S8xtRR3lp+k3975sAeJ9DZ
      w/1eglKeiwhlnCKw9HoxWjv7WwiJTjQ2e79YjAbJsSHxbZjA2utYnlvZ4vGpGuMjBcbKBTB5
      eDSP9UOtNsr13Q6zlZC+NlzZ6VLyFRPlsqv40hopHAlNZ08sa+HVjTo96fOeLrM9OYUICuQt
      RgSw8vYrCGs4bhOOtFdZSXy+f/k6xSnDSLiMXH6PYHKO5uyTdOwjFHbM798jwsN5FHBfC8D4
      Ee/NPs1me4WJku9oAlmLkH4vxvMMaSrRqcbzfISENHFaudPpZTUCrswxTVwBS6/bJwh8Uq3x
      fY+ocGvk4vLaNmmSUA5duNKTEoOrbMvNHCnh2MwYSxuKd3dbNHoxzx1foNWNuba5wdFKiS4+
      RZlidF69ZUmt4KVonq3yNMnkQcToOHv761hg7uzzCGtJek12jORouciJ+Tk6UweJ04RgpErS
      avAxg5gPDVYn2Po6cnL+ozf+FcF9E7LFwkn+n+spRy+8zNRIiWePzKKUoFAs0O/3EQZ83yeO
      Y0ZHR+gBURTR7fVQWedpm3F8Um3wPA9tDJ5SGe3BoRenpMawvNlgu9nm+aOzeEIOGsIOyArW
      mTC5qbUwNsqhiVHyAvndTo/F7TbHq0VKNkHg+hvl/TmXWl3Wz/4BVqp90Z4cu4lld+zE4HjL
      acBJu8TvH5/hfwtOYicXBtvaBxjVeSBQPljjujn8OiEG3Kl55d1CCFZnT3FeVvn54gp//tO3
      QFjCUFAuFyiVQwqFgGKxgBAQFVyURWa03yDyAEMQSYolj2LZp1wOKJS8QRa50emzutPitfNL
      TIeKooR3rq4NwqAmo1PDnpoBsid+FonMF8TESJG56TGu7LSzCq2cfgEdbXhN1LByP7PzdsgJ
      Gc3xg/ywCX9bFzAyhrEf1uPtEYH0Hhnhr3iCcV9SzBKnvoCSEngCvJsYApL8vQcL8e/f3bJX
      H0DrbNusI1/5NmEU8ruVhLPzk/hKOVKdyBvTOuNea+v680iJkNpp4aw+15UTDnOwxlp+fm6R
      yWLE4fGRQbvEt29scXJ+FsGws0Kv4/oHJUk60N7G4noK5fSE7Gnx+uXrnK74+J5EWMX5lua7
      5eOsHP7M3V3wzgbl1gZH0jrljasEjW2i8XEuh5OcP/nlX+lC87vFXKjQGbPYArF1zdfijMdU
      VpK2NhSkoK1dyWpBuvfKnmSlp+/bynxgNWlipIb97X9Dd3OFv3zl7zlQ7TJbLZO3KbQiZ2UC
      CK5eXXZlk0bgms3m/CHByxevMhoFjnaWphwZKzNRLKIy/r4xoDNm6VqzRbUQUQh8tE5JYku3
      28f3fdI0RUpJVFBYYblRb1NvNtFIJn2LEu6JkVrLXxWO071L4bf9Ll+5+o88PxZQKXlQqgFj
      gGF2p8H5bgseUW79o2T+dLWlnhqqWXFRriaVgFAKtLVEUmBwbV0AOsbiSUGSVxHdJx58UWZt
      iqnxMbY7PeaqZbe6hd13rtZaDh9ZGJQRGitQytEPVutNjo0WmChHYGVGP8gaaOkhl6gaeLx/
      bZXZSoH3VjZ49sgsUcHlLspe0SXbZIBrgej8jM2dHU6PBvS1JsryHMbASqtH57ETd3U/C1vX
      +N3tN3l2poAUOfXZ9RVa76b8dfmJR7I7stxdRxersLsB43OPRCSonrW+30lvNRrLClraUlaC
      ln54BuVDUQWzkWK3G9PqD3vqY114NO+CIKTO/t3bZweavT6VKICsJbhDViBih90VFmolnpyp
      MVGKUJm96DLMbkqP26drie66M1hSa1lt9Yg8ObD7pRSsiwCCiLvB57fe4blq1gqePecHfCeu
      0Zw98UgI116YThORxKBTxCMi/B+FXOgfpvDDQ1oAN0SBxY5hZaeVje7JWnsYEFIMuD55Yfpe
      1mWv1yf09lRgZV6sBaQyGGOzfWWdHQSDNox5d+j8fakYZHatljx9eB5vdIz3t3ukOq8hFrwe
      HbjrDgW+Sbmdi2ut4IPoYzSa/QQgpCLe3YawgL305qd9OndEUQpGH4a3+yF48AtAKiiM8N7p
      3+P7uB40LgObDajYe20D08iSppZuP6GbpGTugNPiln2dI0TWSSKfhpJqQ5DX0WYRndRKusbP
      Oka7P3m+O970aJGTR+a52BO8udHBWvhavAytHe4GW15xuGCz/XcSzd/WJeYes+kPG1an+BvX
      KOyuIeePuzcPP4FN+p/uid0BUUYpqXmS6UBRVoKp4OH5LA98z0IIdo49h6iMcW3sKKtNVxjv
      Gj7dSknP2xNKKfjOm+c5Wi0OTYvMbBLC9RsSOBNKqaxXjoULGw2OTdcGFAidCjwsnrAYLVje
      avH+9XWubu3SjVNX26Akp+cnkZ4rqTxUUpxeecP1vf8IvDdymB/VLa3YoC28UU/5T+0xXj7x
      O/CI2f4L117nf07e4X/hPF9d/jHR2hVEGnPwrW9h0+Sjd/BpIHOAfQF943yAhysp7v0AACAA
      SURBVPk8eGBh0NvBGs1nr/yA359yDqcQMjNPhgXhAomxGmME9XaHjc1tTk5VM3Np2Ex2MAUR
      9xTIh8KtNjsIP2SmWmK90WZlu8nxmQlKoU83Trmwss7ZuXGa/T6Xt5ucOTSLzOz/di/lzcvX
      ODNeIFQef98v8/LBz2PK1Y+4MIuprzHW2aJRmcZUJh7K/bsfWGv44pUf8Ds1i2sUIIm1Yb3V
      5aIt8t2DX3okGlN9JAaEsoeDhxoPE1Kx4Y8SxyndTh+dGvr9lF4nJelbup2UuG/odTRJbCgq
      nyRrByiEM3VsPgQvWzOW4d+FhK1un8lKkQurdRrNFmenx7i2vsUPP1jk4so6p6fHMBpKXshj
      tSofrGwiBcRGofyQF08d5kK9i5KW34taLNx49y4uTCDHZtiZf+KRE/4wr+KLexyRfRd4sO5p
      WfAVh2ol3qf6iyH88NDZJA/9LlwLJzCylXH+08H83SQxWGvoxj3CMKDd7lIqFRkpldjq9Jgo
      hwPhJ1sMeTv1PIytDaRW8MGNTWaKARPlKmkKJ6fGOJpqooxKkZtHBeExUwo4t7LJibkJtJVY
      IZmYqLHabjFXDjnQ22HpTh1pH1Es6F0KF14mVIrCky8ir73OtCewxmb9KgRSSNLUUNEdPC9B
      x32EtXSCInX9q1kt9vDVgHST46NiiDEWP/BQ2TzgZrNDFIWkxlCtlQHBkZkxLq1uEvYSymHg
      kmg2j//LgePpXlvmyhGVyKfgK6yVA15QFLjJLXlntJx6XYsiir7H+RtbnJwbB+DgxCgr25JL
      9TpP+zGX3v575NkvsqsK9I1lpr5IcXKWeqdPJxodPJV11g+p+5BDdXeDpNPGb+0Spyn29R8g
      jaHuJ5g4xvd9BhM4rWV2bZX3rpyjUq3S7/eZfu6r1KPZT/sSPhU89AUw2VojmhJZu0WZsTWd
      0zsyUgRh+ZvzG7ww7nGoNooQcGxmnFcvLHN6UlIIFAJI0yxsiusiJ7NmWpMl1yrE5M6xFQN/
      QcmhvyClRSnXCjH03GTMoc8rmK1VuG4Fre0t/rS8zQ9e/69c88rohVOkyxeJN65SlQK5u8PE
      xATNdoeoXCGJY2489gX6NxHfTGMbUR5FSIVNkwdS53snyHIFnvkqpbjJaODR290m2L2C76ms
      mXHecBe+9Pghtq5sog6fxOv1aHt3lwP5ZcRDXQDWWh6XTaTI2/3lmlhy48YmpVKJsBCwUjvM
      99tb/LvqkPP/9LEDvHHhKs8ujJNPeB86wVluwLqcgOc5gc87K5tsuovLP7j5uta6hWCtZbsT
      M1qMBjUKuf6eHx/h5xtbzCQJT9keNxo9uo06o6NVOs0Grfo60vNJ45hoZJS41aDb69/WTBUj
      NccHshb6HfBGH+atZkWUXe+agnPgS2mXrxUCCr6PEClY129USIOxhsbkUZYmfzGmuT9MPNQF
      IJI+j3t9XrmywbOHDwzMaq0NXrHAuxvbrBcn2Dp8hvbuKq8t/4ypUsihiVGUJJv7lWeAndAb
      C0I7G10IOxh3msf7940uyqxfN2jCOYJWWHxPQDqkTO9NbI2PVdhotjhYLfFHhZS/jNs0TzyP
      EYpQGNI4phUECCEY37yE6PbZvo0FNNi3EIjSwxX+22Gis0WhogA9LNzHgIUruz2uTjz3iZ/T
      o4iHGgUaWbtEJC27vR5brQ477T5YwatLy3zrRou/m3mRlw5/EaEU/bED/CguYzKyG8DoSJFv
      nVt2Wlw4J04IgVJu/pabWu+EXyqLyuoA8o7PNnti5GNtLe4zo1FIu9Oll2RDMPbo8KNTYyTF
      Mm9tNKhE8KfyKrV3fkBlawlPCDZkkZXU43qieGv0BIszZ0g/xAWwG8uY+ic7XCLYuIpcfJtd
      ORw87pSC4yz1E833OxH2o0K9vyJ4qE+A0CR8/+IK/W6Xpc1dev2Y//43nuXH42fZmjmBUN4+
      86G+cIZy8h7gDJNOP+FQrYxA0G71IGtpUioV0VojhKSfJi7T62UjUo2LLhWLIRYXMdKZP2Cs
      m0tgjOBYbZQ3F1eYqVU4OF4Zhlel5cTMGO3qCC8vXuPsWJH/Ntzhr/7hz+m/8Luw8PxdXbtN
      E2y3hVg4AYBeuYyaO/pgb/BtMNu6wefMBq/qGtqC50jmIOByS/N3DZ+VmZOPWK3ap4eH+gTY
      OHCat0/9HlfGH6M9OoOtjPONdoGt2cdvG4e2tRne7KpB8Xy33+eJmSoW8HyFH/j4vke73aHb
      7WU9fTRxP3FTIrUlyUouHRUurycm4wwNQ6Khr/jswhRrOw26cYq1zonO3AJCXyKtpRAopDL8
      q2dPUo47t6ayPwTC85EHTw7KKeXskQdwR+8MX8LW0gWqSvBH/g7KikE3jn5s+OaVdUbPvsBc
      KeAhsgt+ofBwfQAvgIkDJBMHWLUWazTX71RtJSWbIsQY7RZBRn2QAqSvkELhKUmU1QoIJGHk
      o1OD5ztzSGvXqc5m5Ls0izjlEZ/cvMrDos/MjfPu6hZnFqYG/oYQEHiKKApp9BJGIw8pNV/o
      LfPO5jWSiYV7Lnj5JApkBDA6PsHK5jqjUxP0+zFpmuL7Hru9mER4RBuLXH39Faq/89+xzq9m
      7H8vBnpAPezvRwhn8nyEIHRVgJCWly8sg06HOQCZ9dQXZKaNGJQ0SjWc5O152aC+7AeRNdWS
      w6ntYo+zfGWrwfRoOevo5linxrqfs4fnudRMs2wqTIY+f7b9E0qrFx/yzfp4sBbKh0/Sr04T
      hn7WaCwkCEMuNGNGHz9LF4/Rg8fRvzaCAJDlrAZzOng0tME2IdYIQizHp6YR0pBamfX0HEZ4
      BrUBImebDl/v7QyhVLYYcI6z8vaTq0qB77hBQF7Y4tqauo5x2SQPdOreq4WSSvfumKOfNBIL
      50cO85Y/gfIlUSEkjAI8D05NjLAkR9nc2GT16Ats6V/bQOCsCwpS0EgfjRYGTb9EN01QgYfA
      tSs0AxLdcDCdzaZMOtNmv12eC/+gT+dAqp1nkM8+AEiNIfTUntqDPGIiXCIN4xpteVkdApZn
      W4tYvb/p1qMCC2yWZ/jutTo/XmvxWr1Hu91nrOhzpL1Cr9UgXV3E7m592qf6SMDTQNdYzKef
      zQcgmTzI+8sXeWp+ivNLNzg9XSVFEOUKa0CDYBD+TNM83GfJe43mgt/qx9S7jpJdDgJ6OsVa
      SyfWHKyV2er0mJmokqSGC2t1mv2EhZor5Ty3us14VmBjs4mSWlvmvQS6TSjXPvkbdBdIxg/w
      Uz7H3Pp5PAJmmmvMhBHCGNpPfRWpvF+3R8ngdbT90Dj2pwEhFW9S4znVZWK8yrmNXR6fHM0q
      YRhkhfP0vtH5MAqTTZ20A/7Q+c1dvChkcrxGN45pJimlgptoH0nBTxZXmBwpstXu0YtTqiNF
      Th0c4Ua9ReQrpioFTkYF17JdkFEpYKbgMb59je1HdAEAxGNzbPea/I9iiVJlnERYntGbnL92
      Dgl8Ob6GH4Z8r3aWuDIx8M2sTh1/6xeMDPhxsS8KlEUAP10Iwbpf4dr2GgvjFcqFkA+ur3Fq
      yk01NNbZba7RbkaPEHLQ/FbgNHajFxOVisyP1xBYylEwKLDJG/L+9plj7Hb6tLopm+0WB7Jt
      ZqplpIS1eoNWHDNa8Ablk644RzDeXGP7071THwqbxCAEKu6wlvY5NeGTpoZWv8+Jzgf0W7vU
      Zqo8XvTprb/O29dDYunRWniSmevv0Bg/RHf8V6N7nOcLGMlCQD1jST7mCniQ078TL+DlG23m
      x0YohT6p9LLJM0N6c/5vHg3KW6ArT7DR6nCh3uILp45mI4syKjVmMO41R6UQMhKFHBh3jWvN
      Hkf76Mw4ly4vMVrYe01Zl+n49iNgHwmkCdy4RH3mMf58PeK3Vi6QSp+fnPwDZKvO1zZeYc0q
      ftgZ5+veCrOhoB53ef3aWxySXer1K1z4VVkAJSWpIOkZS/M+aL0jaxcJW3W2jn/2vk+qP3GQ
      170Cv9F6i6lyiPIkBoMnJNt9zTfMOGvSzfj6Z73LnKkVnOmTkd7O19s8f+zgwEG2ZFwgIZHC
      jWjNm2nZrC8RVgwTZcoJeeh5pCoYFOPkjX+FgLKN7/s6HxZEoYQqlHjm0vcoRhGXCzOsTLlu
      FZ9f/BHfn36KJ3YuslGd4r/2ff5ErCCUZb12nA3PxxZvHW/7ywoZW8tOamhr+5GRYcWt+YLc
      hRrrbBEoyYiygxZ26mMaVEIqTLfNP+04p7bXT5yAWstWrLl04Cytw2dpzp2gIlyYMh+8Z62l
      7Lu+nr1enJHmoJsIUi2J+65TndECrKLfTzFauTkBgkG+wBpHnbBJP6Ny22EfUiGY8ewtY5Ae
      JaQzR7k6dowXRyz/U7XJ1zd+Dkmf16bOkNTmOD9xGl9J6kGFH/UKnK6FjL71D6RL72EfMnX7
      UYLX0Zb2XWr+yaVXUd0GhWNnaOMjBfgrFzBjs3TPvwETc8zoNuLEc7TimLn+NiuFSdoiYFfe
      Hec8t1/lzCGWbnTRZotC6JJjUloiMZzfJZKYIGsgqpQjwSllKCrB1k6T2alxmo0OSZKgtetQ
      rZQkjhOMMcRxPuNXkMQJnu8yy3kiLdWWkpfNORDsC58+EaR8Z/0qdvrQPd7yTwZCCNZmTnL+
      yhKfGfOomj6206RTmQad0plwTXzF1fd5u+fR3SlwIBQU4h1Wf0UcYLhHLlBrt46wlu57L6Eu
      vUb75e+QNLYpVEY5OV7B9rsk3Q4jm4v0Xv42aWObzs//Ae9ehl8p5SRt6T063R6JNhydHuO9
      9QZGCy7qEJs1sbKdXb6vR/nPrZC/2g34ZtMj1lCNIra7fVqtDkpJoiikUilTKhWQno/vO07R
      SKWM53v4nocfuInwe797T0pi5KADxXARWL7d8knFo5E8/FBIxU+CA2hrqYUK6QXINMZev4jt
      tt2QwYOnoDjCEhFrMycJK1XU2iK2sUV47V38nU+WzfpJ45481vGFI5jZ48ild/GSLpOzh+ii
      6G+tcbXRwZ87RjQ+QUdbKnOH8GuTTJYmuJTZ63cFIeG9n6I8j+r6BYLZBaQEP/QxGAp7usiJ
      yQXen1wYesVG88GV1/iX+iq9bo8wmhiOes1iXEJKlBJo7UomfV9hLRQKHuRUbAH9RHN1o44a
      9Dh3PkI+6aalDXLywL3cvtuiKAWxfXChaJsmiCxHIYRgbfpxXrq0yLJXgQNVoouv0CuPU7v2
      Fu3RGXpTh/lc9yqJ1rxceYz10hRfWXuZs2MRI5HPO2uX+M/hb2MLj2av0/vFPS2Apdox6FmY
      Pr3/D1srFPwRmqLEjakz7r1JWAS483DzWyCEgAPHSfyI3X6LbpJSDn3GR0pc3tqlEdymC0Ou
      tpXH9oFT/M1ri3hacCbLGVgDSDMoqHe1BQyyv7lpIwQ0ez1W601sr81CwSOqFSHrS5q3axeA
      KY4+kFh5SQkmlORaT9+VxzSzdg7daeKdeoF2arN+SVD2BF5zk0ZYZebV73CtPEfjiS8iwgLf
      qp3FKh8BtFSInJxna+aIUxxpzGLXEFUn+Re9i3xj5Dnemnma491zTCiPZyYV76y+w6Ujn7vv
      a30U8UDYoIfqixRGIpYPPUbrPvdluy2sUIjFd5HXzlEfO0wp9JgaLXN1rc7Ppk7eWfCiMptn
      v4ZK+7y18mOenp9ESItOZdZ6fVggI2Vu31u2Wm16ccLFq8s8P1OhWAkHLRghb63uAgWJhuYD
      UNmRFPStpZ/Yuw4X6K0bmF6H6sWXGFOK1aUrVMolRFhg48YKtbEaG72E5PjhwWfE7FFsfR06
      DSZ3V5Crgs2Zx8ELCK1g/ckvo/0CvaXX8HY32UTwf409zx9s/IwzYyVa6pe3Zvi+8+C2vk5S
      nWK72SQcHbvvExKFMiKMkO06+shTrHZduHFxvc77aUg6fmezQwgBQYSO+/wwGWWn42YUu+SX
      yEorc8KcQaea+m6H85evoho7PDZSoOD5JLHGGkmn3XNzzVKDTgVYyVLX0Dt8f/W0vnA9fEaV
      pHsPPJSwWKTywu+w22jQ3tl2db5A9dkvEVWqCAR6pIaaOrjvc7I2hShW6D32HP+8fZEvXvlH
      Hr/8EyYvv8wB02ImBP3YZygdOcnCtTdYuPY6H9zYxqSWURImVPpLyR+9/xFJtSmWdxXBi39E
      Gj8YQ1ZEJfSpz9MNQkprP8Ba2Kw3uHHg+bviroiwANOHWGvt0EyuU80cWKNxsVxE1iVC0Wp1
      CH2Pku9RBlTgs7vTIowiPJHi+y5y1Ov3SZKU67HhJ5Vj9Gr310ak6rm5ZluJuevkowDqx16k
      m1iKZ74yaHPSF4LllqXmBSzXDhIuHKdzuy6PQuAnXSaKIYdCQbO1waVWm5cvdSlJQ0+DmnuM
      Qr/BodIs9bUeS1sNnoi3eDk1iKMvfvpMgQeMB8KEEiM10uAeHN07wFqL7TSRWMTqFSZCyftX
      16hGIY3KzD3tSx44Tis2/Idrmiv1rEepcVEcpQRrO01Wdhqcv7FOYaTCpVYP3w8Iw4he1z05
      PE8ilWCjl/KP3iTfCudJjj1139cZW0tssgq0u0DVF8y+9z2mVt/jQGA43blGVWpKQlOwCcXd
      Vbz1RSbGqtQCyaxK8AfU8aHYxjobCm4tdQ1vdyx+axsRFIg3bhBbCKqTHKPLoZkpvlXXvJqE
      xOXxBznI/pHBfT8BbL/LkQs/4srprz4YZmGWhdJrS3ymdYXGiGCm4POzpAz3GokIi/xFMoM3
      Nk6vfx6Lo1MYoJ+kvHvxMqcnKswXfC7vNtysASUQIsAPPKQUJNrwdlPzzUNfdeaXlDTv8xIF
      sJtaAgF3+9CUQtCsbyKTHs3L5xhfmCc99w6BkqjKGGbpPMWkx/V/+i88+fyLvPvaK1R+64/Y
      UmU3FKM6BcBkax0/CrjSbPFdM8ELE/DUZJn/2B7h4Pw876TwXmmeRVnmnwWX6T//exR62+y2
      Ht2O0veD+3eClcdm5f6GLpSkpbj4Bt7kPGvhGJ6S+Cee4uDlNXZ3tqhVS1ytzFG99BKVwEOd
      eoG1OG/4B74UVHeus1ja355cCIE+9jRRc4Pvb3r8XdMyHxmONq4SWc1vHpxAZNSGx2sjrrW6
      sVxv9VhptBgdG+M7lVNsH3kclD9kTLYbiNLHpwvMh4pWNh7obmGxjB85gZx/nOrOOjZtU5sv
      IY2m22lTk4YvHT3AN69usb50hbHpGTo5dTwTfoCtfsr/UX6CIFnCS3ucnimx0UlYFQW+TJMl
      X7E5cwTZa/BYFPHS9fdYnDmNHUkebgH5p4T79wE8n9bBJ+/LQQqsxqxfY26swlS/S+f6ZaRU
      bNZ3OCYt59Z2UZ8/xmjzFYROiH/+bc4cPsrVC+eojo2RaEtQGYXSrf35hfLoVGdpewVmPvgn
      3jr1dfrnYl6gng3XZlALvNHpcWmnyeWxI7xzdYmTn/sT6v7YLdd2P8JfVoJ2NgTuXrATWzrz
      T5NakNVDrOUFEcDxiz/i2fkx/mP5afzHD7hhIkLQN/YWem/78RcB6I8fwG5cQ3Kef+oXedKu
      8l9ee5ep3zrMdjhLRyi+e2mNnbLHVPI265VZ+CVspfJILGopoDY7z/rlD1i/dI7W9hYmKrN4
      fYUDlRLG82niIzwPLRWjBw6zvniBtNfFCyKCKCLt3/kRLcpVbhz/HEjFBye/zH+a/gIXO/Gw
      WgxoJykX602Wa0eY/NP/lSX//qNag2vEjfkccZP+2E4+XPubZv2W9yzQN26mcWKgpy09A8H6
      EqW0y/9beIJ0bI6ugZ6BjrZ8GMPFWsPBxVf4F+1z9LXmSl8Qpj2mfv/f8Rtmgz/rvob2Ql46
      8RVa0SibQQXVbVJ6/8ePNP/p4+CR6JHdsB7MnYbDn0HEPXQS05Qenz10mVKpQCmVtFKDPP48
      naUP6IzM4T19DJGmbPi+C2laCx8x30KOjme/SA5vXuTESIBOXV1BV6esdnqMzR/hwvRRxMfl
      hd8WrkynJAVdY+maO5s+onx3neTC+g2+tvUmbwcT9KcO3/3pGMNJU+eFMZ+rjQ5SwAflBUbP
      v05cU7ypCzBaRpSrmNo0x974Bpfnn6HT2sm6jT3iFJAcd9Hl+5FYAImFLRFBAogIggi5dYOj
      kUAIw7Gi4GBS53JDYJpN2tMhIlWAcp/5GBhP21h/mAxLreXl6gm2Dz/zwHvnKwRTgRpEfm5u
      pHsz8l5CHwprke0d/mXrbS6HVTYf+/w93QehPP5x/CzB5uucGQ0obTdYPvY8W+OHuSwEhNHw
      HKRicnSELzTf5C/Gn6D/S/YEeGAmkLh27kHtCoDqtbdYGI0QwuIjGf3O/82fbf+U6VDdd6dl
      ay1F68yfzcTwl0mV/33ii2w98aUHbueGEkY8SdcYtLV07reVujHMXHuDP7z+A36aVvjJgRfY
      /hhKIK7O8I353+LtrTbx1EHKb30PwgIiKiKExDv/c2zcQ7TqrHojHK8V+VfNN5CNX6Bi+rtw
      tB6YqrMLJx/UrgCYlQluTrCgGHn84fNPYq1lqtnkQfATg7hLXPT4/6LjrB16BshKQo12zE/1
      YB7zkRR0tCGUgp6xH2Wl3RnWMrfyNn/irfLXhYNcXfjMffGRRFTkG8e+Dl4Ac0/u21c8foAv
      Xv0hst/lTDUAEfD45CjHmle5WHs0p2F+HDwSJtDtsBA46kKa4oZoW8fHmbEd3jIaIe9DQI3h
      ginwhneYjfkz+/5kG9uIchUeUNe03dQy4UsS+/HLTXOMbFzmTPMK/2HsDO25Yw+EmiCSPmNX
      3+SwbfP69FOYcpXJ5Xfptlt8eUIgKSEVSGG5sN3jknf/DNhHCQ90SJ5ZW0JOLmB1gvDD+9rX
      8+99CxN3+cqET9nNOEVKQ6Itf7EB75/5+iPduaCkBAXpppz3HlDPGfX6d0kPn0HUpj56449A
      Hs35rUv/wFfGJP1uwjdXW6wdfY4/br5LJQwoBMq1mvQkRhukVHz7g2Xi0y+CEGzFhtbEIay1
      bFD4haRJPNAngBibwSy+g01T1InP3Ne+3m+l7IjS/8/eewVbel13fr+9v3hyuufm3AnobmSw
      QYIACVKUGCWN4kjjcsnjsaQZu+yyn+bVj35yrBpPjV0znpE0SqNRZBYpkiBAAN0AGp3T7Zvj
      uffk+KXth+/c1H1v5240QP6rblf1CV86e+299lr/9V+ois+X0h62ZqCUwNAEJyJtLjptsO6S
      a/2IILt/mgBTwIMonxcrM7gDBxDJ+w/NavUSE+tXGfdKPB0DKXQq7TYpr8mLhfexDA3hBzQb
      Hp4XCgcbpo5lSfK2xaXMEI0PfoyMxIiWCzjSQEy89MANYKIyg7BjFGK9jLXXmLd72ewv2vDu
      nEF7KzxYA9BNSPc+kIYQwfBhtHgP79oxtPf/gq+M5NC6Re+FhoOsFFA3MB4fFxgSYpqk7gcP
      bPYXAkS6774jVEopPrf2LsfsgFnfR0PS8lzerAuOp5P0xSMoFSClROvmLIQMm+1pmiQVtYgu
      XUGOTFJfX0XTdOiffCg8ofaV98hYOqlqFSOfZ8z3aXc69I8f4HT+GaoPgJL+YPcAQiCy/aE2
      vlL35aK0Bo/Q097AjuqcMfJM1ts8lQ47xiw6CmP2HHb/ELVAo086lDBvG158FDAERGWosuEG
      D67Sy+99QLXHnRYDqsWfdfqpCZ03lxdJdGpce+arvKcUn145xReSaqunm9S0bc0lETDZE+f1
      coupvueIZA/RW1mkFMvfNgdzLxg+fBQ/O4A49xMaK8vYgyNIBbVqFZV/MOd4KJtgbfoMeiqH
      czfJmRsQ0wXapbdJjU6ipWK8sVaiVSnxdG+O1zIms2cvMDIxhttpU1qc5dnjz7G0OE8ilcax
      E1xLPnw9/p0QQFQTmCIUG24Gis6DKnNUiuDSSXpLs6x/8lfvKwCQ3pil6QUsjTyB1qxSy4+z
      atqg6Qjd4ANSfC4oY5iyKzOp6HR8vjlf5CsTOXQB7W70vOXDbHzooQx+gPfST4TKf6Mv4Zlz
      GAe3WbjeA5pZHigVojdo0ufXSWWyHC5NbZHV4hr0+fWtqEVSU+SD5tb7Auj1aqR2mGPUqeN5
      Hq3VefxqEXvsCKfWqpiWTi4e4Z8en8Q682OqC9PELJNqcYONuWm88jq1/MPvxLITye6G1xAC
      WwoKbnDHSht3AnvlOnqmF9+Kb8tSENb/BpX1Oz+QUqSdGu96EUQ0QdAzFDbzsyJhbqVR4Tf1
      VWxT4vvbhUPfuzTDhXKbUyWX7yw3WMwffmD3div4CgLfx223YTJsRbX596DwwFYACfjn3yCo
      Vxk//gzrPowtvo8eS+LWK9CqM2xG6QwdxthYI1iaYnLsMBHlUyoV0Z0mtmEhJj9BWek0hYF5
      4qu4Kux2vlZcJ/7iF3ijuUiussp4NsmvHB9no97C0OBscYalZ16lk++n9EBpDLeHD0Q0gQQK
      7oOfDifXLlBuO3zCaPLXF9+Gp14BQiKiSN15p3oV+HhCp5Ya3lMYV4mwfnozQuT7go7nce3Y
      55B9B3n36knaloLEg+NI3Q5C0xDZ/vtiG98KD9QFUkohNEl7fRmnXiadzsLGAp5mIz0Ht1FF
      GRGcjUVa5RLxyDwim8cvriACj+joIWpOC4wEdWFCAEWiqE4LZSZoLM+xFu3ltdp1vHaDjhK8
      MDGCEIoTRpSZ6jIXM6MPKoR/x9ic7YMHPDsBDM6c4mvmBoYFpibIN67wV3MJNkZvX5QTlNYQ
      0URYIQcgNWzh0wy8vQdUJMGqLzggwri/EGBInVdLF/mL5BCunUZ9GJHnhxjufmB5AAH0twrg
      djBME3wPPZ5CoqiVNojGEzQqZbRcP3rg0ZEm8U4NJaBZrxNPpvANmw0samqf66luoNpNPlm9
      yifXL2Eno7y7Vuflw+MYusQLFH81XWZ6/ATVgUP3fU8fNpKLF/gX1ZNdca4wqFB3A/7P5Cdp
      9R24LSUkWJlF5IfRaxt40dSWsNGtIknR8hK/tHGaIykDXdNYrbXJxyz+SprkFgAAIABJREFU
      l2Y/zaEnQ/3Xj5Fy3IOjQgDLkfxuGZTN2TAdDwlcrQIom6C79K5ZXbWBbD6kN9xu9kzmEMkc
      s3GLE805YoZGNmIyX6pSqjXQDIOvZSTT66f4k1QfvmaAaT/WCbP9oHyPE+vniMUkQeBv3YMl
      Bcfn3qE0fYqp0RdRw4f23RTL/jGM4jJ9M++yGu+j0zeJiMTgFgbQTA/yx3aa7No1jjSX2Gj7
      fE1zaNnJ0GX6mPUT0L7y3/3L/7nyCNrlWLUC+bPf4wnDYd1V+NF7zxXUGg1OVK4SMwSNjo+h
      XCYTFhHhETc1slKR3ZjmmpbGj6U/cgYQWb5Cbukiv25tdLvVhBAibPN0OAqdTpvf1FeRK9Ms
      JIcJdPOm+1RK4c5eoHbss/g9Q0g7ekd5BKEbtFN9LPQcxA3gqm9THTj8kXuOd4IHSoW4FQwB
      r139Np/JW5Q6Ln/U6WMlMwpKoTtNvFQenA5E4rd90Pa73+ar3jxPpa2wUR50O9xsd3ORElY6
      in/X+1la9xGOfRjokS49F3+INnyYVjyHNC0Cx8FFsHryB/xTbZW+mESXAqW2oz57PRel4J2q
      Ytbq4ezRL4d9ASprSM/FzQ2B00aY9j370cp3CVbnH0mP4w8Dj4wM5yo4bQ/wCgUytuT3jVWK
      lTlAEjUMphcD0hL+ypygM3iIajcMl9TCyqZGsP0Dtp75HP4Hf94VqxJbNY3hAAlnzLJnkTU9
      Xll5l+/khh84x/9+IAKf8soinetX6Z84QDoeo14qUlhbIx34TMV1hhIasH8yUSlYaDgkDI2Y
      lBQTYaRErcwQWblKc6grIHafdBGhGR/bwQ+PcAWAsJj8vy7+mMnUTqKc2Pq3XGoibYs/34BW
      dpj44Ci1C6dI5PI00bFjcdrtNivZScav/ph/VL9M0HGIx6P4QYAUEgj1fjo+mFLRcn3+yhik
      euRl1vR707dUrTroJsIw7/sZACSFR2LmNPF0Bj3bR+X9N0i8+RYd6ZFJR/jS8REsE261KWq4
      Pv+r/QJONA3ZPoRh4U2fR/YMImLJ+2PL/hThke5oRCzJf4o9xXJzJ2dBsflDS00iPI+DnSLM
      nqf+xt+Ry+fRqgXc6XMYy9eI1NeRAtrRJCvVFrqu0+m4dNoOjuvSanVoNtvIwKPd7qAphbUy
      TWd55t4v3IrAfUY+BrwKoyvn6DcVaDqNg59gwdVpf+OPmfzzr5Ne3WCyN45ZbmLIUJ3CC6Dt
      qVDLJ1C4fkhJcHxFzND4J+WTJK++tZUc00afQCYyD33wq1YDc232oZ7jUeGR+wW17Aj/riT5
      rdoFDiQ0gq6PK4QgGrUJgoBPj/YyP1dFHfkkhdVlkplBNDOJ0TeAEnrIBjTjZDNxkhED3w/b
      qXYXAJyOjx3R8Tw97Btgj6KNPnHPDdCE1KBSQO1oJne3CNaXGLEUhbf+MwkVbjRTjSLPJT3e
      MQVqo85kLsGagFrL5Wy1QyIeAyGxrFC5GgFLS+ucr/s8MTTAVPIgzmA/dFemB1XEczsIr0O+
      OMPig+InfYj4UBzjVmaI/8+I8hulUzyVlGwSWzVdIVXIPHwxLflhYYXi+PMUhAZZWNk8gIJy
      zwQ/WTzNL9NA08APgm4vYbCjElSA1KDpBkxnxmire5/BVb3Mb62/xTc7x6j23ps/bCVSFJau
      YOaHMAKPwHU54a6RMiN8+heOsrReZzQZYTQZ4Vqtw/HJMWKhH4RpbQv7FlxBKxbnR0de3WLd
      PurYjL82z1L68WTi3i0+tKCuimf4y8zz/FEpwlTdJ1BBKIuoQCmfJ3JxfksrcGLqB8j6zZ3Z
      hRB8MHyCS42wvZFSYqtNQCj5HIasOwQ496ttH0vxw5IiuI8w4FxskKuHXuP8yCeZNXJ8wZmj
      L21hRyV9uQjPHckTiWlEYjqeLsimLUwbrIjYGvzlZoexVJSE30Q8oj5eKgjQZs7tkkORY0cJ
      HqOgwv3gQ81quPEcl8Zf5o/iz7Jca3cfsupelsIydT4f9/nd6tv0Lp7bFRIE8HqG+cv+EzRU
      gK51G+HdgKypkS/N3dH17EcsE0Kw/OyXqfWM390N3gAFyFqRXy69R8rcjljd+KlAqZu6WQIs
      l+v86bsXWY4P3PQsHhaElMS9JmLHsxG6gciPPJLzP2w8Fmk9N9nLn6lRHD80gE0Jc8vWsKM6
      owmT34us8tLM64jmbmXOVv9Bvh70EwRhKyMViF2GoIC2uPVspYJuo72ZC/sKPwnduK9EkAp8
      jMXLfHXmu0xYtyDMKTDtCHKPc/UmY5jDh2H82CON8lQOnoC7IN19lPDI1jFByJj0fJ/ha2+y
      mBmn0+1FK4Rgfeg4/3Yjwj92r5Gxw8tqBzqaUJh42Lrgl3oCjMU3eWvsM/jmdnx70ddpCEVM
      im7XeAj8bjcYFGOtNT7wPVStBFJD3lBWGMxfQQ4fQj796k3XrZQKk0ndeHq8tkq6uoIRS9DJ
      jSBR6M0yqrCAPXKYoFWj7Ek69QoHClcZjmpkpItWWWM4omHYcsexwVMSQ4bu30rDpWEnmRhK
      gNhs67SNXNzm9w/o/F/Ll6klHlzHlp7Vy9h9IzSnzqE9eQJfCSQKH4HwXVqVEmkcgngG14xS
      ch+DhuoPCI+MCtHr14hffpOhiMQ3IwzNn0bvtEhmM1gioFe6eL5HvrpCztKBkF7sugG+5yGl
      RClBv/AJrp9hPjMeynkAnd4J3nNtYrVV+rXdP40CDgYNamuLrAw/hbBs8NxdiTGZziPkZgHI
      7kEnhNhF/oo5dYo/+TbpTIZk0MG78i49fQNUl+cwyqt4pQLO4hRHrr3BLyRhUDXIyw4ZU0Pb
      7GdEmLmu+yYBAlMGCATFtouKxBjMxLevX+3+06VkULU4K7KoB1QTHV84T7RRpHDxNCNmgLl4
      ic718/Q0VmlfehdrbZpWYZlUfQ137jLJ0UPUb1jElFKITpOnZt5k3cpsNTJ83PHIDMCfucDo
      QB+V6UtY8QTr6wWk14HFK8TxaH7wBqpVo1mv0e54pIQIR4kK8L0Az/NxXR9D1xmK6Cw2HagV
      yZYXqCV7cZM9XEmM0dlYZTBoYWqb/cBAkzAmmrzdjhCk8mHW+B5diIQWMDo2jmjWqJY2SA+N
      4dYrRHqHiERjGLEEkfIaT1s+ERS6oaHd2FyZ0DADBBHpIQSsNh2KWoQjQz1b7k/YxSZs4RR2
      tyHc3Pse5bVV1nomHgg/p6dTormxxsD4AWrFArZhYPcN41Y26DgOIvDRrAixWJS24yKHdhuA
      alSgss6hmbf5YsbnHb0fZT2YfhEPG48sE5ynjXnlHWLxOM1alUQ8jpkfojJ3FcdxiRoaem4A
      rVFmfuoqzxyc4Am/ymDcwnW9cFAI0DWdIAhQWsDphQLPDPXwn9cUaV1wMncckRsgszHLV1Z+
      woQRDq7NMOu32mneOPa120sP3gFUq07i2imaB54nuCEiM3bhe/wzYwnH8TBNHcTNDsPmXiNA
      oqG4uNFkeGKMVHQ7Sx4Em338dlMiLq2W+Q+ZTyFz99elZhNxXXTDDqFQsSSsa5AirDrzXRcj
      EsXvvla9oaeZvTFPYuUqtd5JbLdFaeA2fdweIzyyPUABG+3IZ7b0Spfpapce2v4RBdATLxLJ
      jvN2oo9Tl9/hF2vrPJW1uu+GxdpBIFEIXproRyB40SgxW64TxA8wNPceY6bP9fQYF65f4IW4
      JGfqoBRHnQ0KhUso08QyTXzXxVcwmz2AcxdBFaUUw4UrfDFS5J2zX6eYP0CyVWJu7EUaRpRn
      3TUwFaYV8nkAmq6PFAJdhn+bA0QjDP1W0UhEzB3n6H5V3mw8B3uSvLB+kfcSmZDodp+o71HF
      k28XMUvLLCobBg+wn6qXctr8Yu0s5yMJCj1jtAL/IyWg+8hcINgmPdz4FyhFZP4iR4uXkZE4
      C7EBPAVuNEVfdZGJmGSrXTuia0Rii+DYE48wmIxy0Fnn8un3cGsVoukMG77g/bUqSbfD1YUC
      Z4s1WmsL5OIRrrzxfQYyKVqzlzAPPn1XXR+ttRl+z1ykNxnBK2/wWTYYKS1xpLXAyMoFnon6
      dBVFUArOFDu07DhVDD5YLBE3BJaUXK06FDow2wo4NDJA1NS7fb92CBt373HnjCql4EhUkVi7
      zpSjoeKZ/S/Wc1Dd5sfhanL7mVmogN73/o7P+gUK1Sr1gf1rgOX6Iv8oUqLTbrPuwM+tn2Kx
      rXATH42o0WORzRBCYJkGr3aqfOPtb6O/9js4QkNE4lzRsvycqG4uAFuQcnckwjZ1JkydE2O9
      bLR9qtEcWryfgweP8va1yxQiB8jWl+kdHafqeIz+2u+xrkdR+TU27lJP5WB9nmRvSE945uAY
      52YWGUnH6bMDhsyA1aZDf8xCAJeLTVI9eSb7wsjT4cE8K+U6V6sNxkb7iVpG2MAv2O5VHD4T
      dt/wDiilaLseL/WYTDYu8/9UozSTu/U6VeCDkDw9/WOO6E2uNOCDgRdQmoaIJkPlvj3p1Yrc
      7Gm+Opxgw1UsHfzcLTPNhxoLtOKK95s6P68ucjwf54dV766e54eJx8IAAIq9B/nm7Dq/dtzg
      /yjMQ5fDv5gaYaP5PrmoGa4WgUIg2E8X7HB/hr+/OMPg3LtU2i5vDX0ST6YIoha1WonFisd4
      u8DljQYyE4doP/upOql2E9WqIXeIwarAZ1B32ZyapYDj44NcmF9jodRA2FF68zmu15r4wOTB
      cGbfhBDQn47Rn46hArFV8LJdaHVzguzGcGjb9fnOTJED+RRRqcivXmEm0bvdwinwsc/8AC3X
      z+eSLvlIhONp+ELnDH5HUSk7rHkap+wRcu0SgWFTFiY1K8HBxhJfTrZZaAv+OvYk3MrFCgKu
      Ozr/cU3niVhA1Lb5V8Uk9ZFHoxrxIPDYGIAQgivDL/K9y9+hPbD90GWml3MzBp+xN30CtZXo
      unFgAKQiFl88OsG1tRKrTRdj8Qp6updmfhgmjuNW1rmqH0VEb0+PEHYUYd8QzVAQDxxge7Mq
      BBwf6wvdlvDC6E3FbnmvoZsjbjI+sYfPv/M2gwD+qJZi5vinOaUb4PtI08LUBIECP1AMzH/A
      fznoUWtfJ2tG8X3oeD5CBORiJnFL0h/A06yiRcDSfBBNvGAdM6JRdxT/SU7Q7hm75WZWCYHn
      OvxKpk1PzORqA9qaGe4B7hBRqdC7p3ACaN+Qzbck2PhUgr33FBktoBrIfbvh3A6PjQFAmG09
      +cSXdrEa+70K80srdGL9GHrY6NpxfKTQt/LYoV2IbsQnIG6bHBnIM1ee4+fTPkaszt+aFm4k
      hmrVEOn8PYdBhaax2BG82N2H7EpY7RHtuRGb/j2A1IKt18I+xqJ7rP0LYWaqbaZ7X0TYsfCs
      OvRYkuCNvyIzPE5Ri/K59izvOjYXU4cQLQ8CjzUtDlaMbGWVDTOFq5nogYcMFJ8tXyLhtWkK
      nRU9wZyWpT166I4iOUE8zcV2k+mWhWvGOOQUOHm1AUdf3r7nVh0Rie/5/VRtlc7UGaTU6Okd
      oOZDMpWm2WwiTZO0bVJbXSSb6qGh2diRCKq6gW6YuE6HvF/nat/TN+Ul7hSPlQHANqVXtRro
      S1fxGmssepI/n69yWLQ51ptBofCDMDcgCEePFAKpCSLRsGUSQvLFJ0ewdA0/UJxdPc+V+KvQ
      qKCunYYXf+Ge27q+M/4q44vf45ne7R9VILYMQaHwvVBaUMjt2TDwRaiyrG2zOwWh4QYKNm1S
      CIHbCTC6IdTuugfAlGvcRIQTQKtRp99p4lw+SSNns5DOE1cO5eEnKQTbiby1bBh1k4SLTwD8
      fe/YLsdLiL3W1r2h4hlmG02a0qIw+iyLm9V5ShFUN8KBb8dQrUZYV9GqhRKa3XtQQYBo1pC6
      jlFbR62vY/X1IYWGaoCvfGbfO8XxE5+iubyAsmx6+ocozS3SUpJaOr3lGdwLHjsD2ISol/CE
      RD96gpzbpt1p8cHCFSZ9n5ihh+1RDR1Nk6hA4brbGy8hIKIDaKxUGrw+V+T6gc+Gb6R7Obj4
      PotXT9I+dGed529Cp0mn1QR2ZGxv+AHabQddN3A6DlKTGLpGs9nGskzcZgfd0ACB67gkElEa
      jTaGqeN7Ia1bCIluSOrVBpZtYFmhdRTkza6VrxT5pz9JPd2Ldvk8a4GGzPRSXlkiGAzvT6kA
      VVxFRJME64vIvtGtEOrmTH83kXulFOrKu8jhQ8SrLUzlUdg81o7jqZVZxMhhguIy/Zd+REyD
      5/rTnJNZrhz6DCKWJHf8E6ACglYdU1pYQ6OgBO1qBWGZHPmFX8HUIJnuJ/BcSk4Ha3ACmcgh
      CTvv3CseWwPQfQfdd1gx0ggDiIKWGecb8+/xX0QqYcE4obsZZnxVOGPeMBAtXaMZhKxGPJfh
      a29S6z1Iu/fgPV+bRDCYim/RrveGwvcCdEPH6Tg4HZdEMkaj3sIwNRzHAwXRqE212kSpAN8P
      kFIgpYbvO5imiZSSRr2FacXw/ID2zEVU/zMIe9sQNhzFRiasUxg68hxxb5230gchc3hLt1MI
      iXIdEqe/TWPyBfx2MyykcdogNIR59/0csq0NDlyZYT4xTE91FVp12OHqiFQPItVDUFxB9o6w
      4n2K5NxZ/jZyGC2aQCBYEjGyjRU+1biGJgTXiPF+00Alc4ie/r2fbHfAb7lo9yHG90jzAHcD
      P5LAy4YNuDfzBT6CcnIQZ+4KY6ZA10DI0H3QNG1bQqT7XFQgMDSdt8xhKkNHEZpG3YhRT/Uj
      4vcul6KsCNdm5pgQzV3Jq50IPJBSQ8gwmC8EOI6LZZlhqaaU6LrepUpo+F6AbduAwPc9dD2c
      m7wuD8qydc4srPGD6yvIY5/eu/rL94hcO8XRCFyw+nZFcJRSCClwJp5F7zTJ1Fcx5y/xq42z
      HKrOcjE6FMrb3yGEELRcH6e4ht2ps5YewViewu0dC3+UnZ+NxBGajjRtglgKLxVG1frWpxgv
      TvFP7DUmEzpDUclTUZ+jzXk21jfIVBYZXb9GPJOjJLYNVJ+/xMTsSWJeg0qi776yzo+tAQgp
      0asFnrz+OmvpkS3ymi6gPXWWeKdGXyrWVUwDT2kE/ubIZytZpknBUaNFa2UeWS3SCQL8nvvj
      sgsh8GJpKlMXCNot+hLRm34EXde6rg+YlhZSu20D3RBEohaWbWBaGpoGuiGwIya6IcLPWgaG
      paEbYNkGUhegBF/3eqk+90Wwbz4fSjE+f5pfj9RJ64LBxiKrjqAVy6KUYnLxAz5fu0CkvMwv
      qSW+EG/hdlr8vXUAz/NYz03cfWAgmaPZf4hafgwnN0IHLfT/d0TOlAq65EONoFpkbOpNDtVm
      iXaq/G6+xVOxAFPfPf7ipsZzUZfnIi6r16eo9h2gqMeIzZzBtRME2X4qZpKv1c5TXV+lEuvZ
      Kgvd9zcDTMlN0aLH1gAA7OIi/02myqWNJvVkaOkBoEaOQHGZJ+Lby6AmQpqEEgJNhvFI0SWP
      WZrkSFTxQsRhpF3gfXvovuX9/HaTHrfK25lj5Jsb9Ea2B88miU3Ku+8Iv+nOKsVWjfPV9Rp/
      Wk+yOPFSt4vjHgmsWonfdq4wkIkRiRj0RSSNcpEZswe7ssrvaHNMJA2ejAYkLY1rdZfvMMTz
      tWlmS1WUHce/VUZ5v+udu4g2fwnVPwnxFJjW7n1Vq45ankJk+hDRBNKy6duY5vlchIylbe8/
      9nlQw7kUPy4rmql+3EgyHOhCoiJxLpLA1e0w63yD8aodteYAvZakb+kMlibJmBJLQF61Hm8D
      cKMp9NVZntKqnLMGt+jPrhKsWBmerM2QsMKVYVMMKxx0gsAP/V6Ewg8kIRM5HJlvBRmMaJyB
      oI4sLqEvXCbXKFBL3n45VZ0mYm0OkR9mI3+AIJEltj7Hka5LHnR7+GwyUe8Wm2HSze8X6m3+
      QDtIZeL5W8oSinqZz8kCpgwjTEIIhi3F8do0z/tr5GM2SgUUWy6nyx7fSD2LFIJGu40XQOA5
      OD2jYY6iUQlrJwwz1BLd70aUYmT5HP98ICBYnWFBxCCS2PV5YViITF/ot6uAdryHFSvLrKNz
      tmPRLJcYsCXaDecJy2MVHdfjdfJ4iR7QDYLSKtSK6MVlPMAxYxDbPqdy2vQsX+Tl4jkqzTbN
      SAqh6WQtibx+htbsZdyZC0RqBZLt8uO7CQYQms4/9J1gfOU8eA6o6NaoUvEM3yz18l8F1TCU
      KFV3TxpWhDUardCN0jTAx5cSPwiwhcbY9NuYzjiV2Wt8Ia0jfY9eEeVvr1SJDk9QW10iGD/O
      stwjdm3YqL6xrb2vajc4pLeB0N9Wew1+tVkHoG54bY/oxSYLU0GgAr670kY9dwdCv7pOx/FJ
      CH1rFTE0SX/Cxg8CvnVthQOZGH8QfRp/YgQhNZRSNESoqqHZ0a1N7GvLb3FIb3Nu3uV8xcXK
      9VJXOlrgUU31IwcPIroz/fLo8/xv9SIqLlF27CarV67D+MzbvCAq/Fj2sjZ5Aq9nhA1G2ABm
      ayUGCz/kQD4Mi+4yHiEoNDrUNbUl+C1zA+C5BMVlRquLHCiuMn+5xaqZojnxHL9WPsXTPVF0
      qfGKv8zVheuclVma0kRm+zE0i4GhYaYvX0BLRx5vAwBQ0STTk59CuQ49l99g/cjLCBHOFjNW
      HtcvYWj6TcGYIAiI2BZOxw3pEyKMywN8IQUfrFxD6lButtF9l7G4TSZiMfvOP5A//BTlegWS
      NxtAuLxvz8TCjvG2yvIkLSBcgXYObhUIarVWGLKVAk3X8X0PgYbUREhUE9sznlIiDO12R/EB
      zUGrzbLcdPGHDlPaZ7U+ULxGNmOC6tJEFCjCVVGTkoO5OH/ojxL0ju1yO1RuEE3TUYGPWp2D
      SJw3zWFej6Xx+9KgGwi3jSivoepl5NjRXYM0SGQJuv0CdHGzj42us5we5XRlnoKdu/nC4yne
      KuQYdNoowNQkNcdFE1BqdtiotxDRTrjybtYY6Ab0jrLQO8q850KjAlaU/Opl8pHwOSsUhiY5
      2hPjSdVmulLhZDPJdN8TBJaF9uznmRX2428AW9AN2nYSVSshEtkwOpTIsrgRMB4PaQVCqG5v
      MkUyGUMhUATomoaUAtf10XWd0ajJYnMNXeiUIxlmfJsJ0WDEqyI/8QrXTr1J/NN3Ln+yoccI
      VBMpRJentJ0dDmt6wqIeX4DbaBOJ2vieg6aHIVIhxZZxShGqQbuui6bpHM6l+eDieyQHxmjU
      1iG6d4vUg14JXdpdY1coFFKIrmaWYDId439qL/Ov1+LU+g5sfW8zuCCkhhiYAMAdPRa+tvkh
      wyTQDLSNpS1ljF6/jijM44wcBQGGEOTXp1jOTbJZzy8ENDyJkx9jKjMImnbTRCWE5ML4y1xe
      X8BEYXTa1Gs1XASm0+T3U4K0ZlBanQu1nW5Ep8lvFd4gakgm0lGk3DucO5GymMRhpf4Or28k
      cNFw9MTjvQfYCSEEbrqPyPI1om6TTiwDhsXlIMZQc5m0IbdpBt3ZT5Og69uVYbouu/sEwVgm
      yZFMhCNxyVVHp+O6vJo3iG0scjF1gFLPJIEKyCye5+fX3qHZbFHZQTjbiXa1wrP++hbpbdMN
      2rzuwFcYpgFKYZoGpqnjOj66ERqmZZnomhaGRfVw9te0MLv9w2KH4PDziHQfbTNKQ+yOdiil
      GFv8gC8mW5ia1pWH8REIrlVd3q5rJFWbiGkjpYFdXeFyfPSutVKFbhDkh8PVF0jMn0UU5kiU
      Fmhffo94ZYnq6hLJ8hL+7EXiK5dpXzuDrht04rnQwPZhnxrrcySbJVzDJus1+O9TRVi8xmfT
      MJFL0NMqsDE3Ez7/nZSKTosTy6d4pccgF71ZHXsvJCyDY5GAp2IeL1vNj44BbMK3ovRPn6Qd
      SeHbcbxIgouuzdPuChFDg270REq1VVq4k6YAUK85lCs1YjEbhGJQNfhe3WLFlcS9FmecCK4R
      QRTmebY2xef6Y/Q7ZU4Z/Xs2AFeEYlFTjYC48plvOlxuSaaKNcaTYbhT18PMbsPziZgahqGj
      G6AbslvuKND10HA0XaDpgulyjfdiE0znn2BDu3nwhydXvFa9yERUhjNvdxX8fhG+nn+Jhd4n
      ia1MMRQxkcBQRFBenGUlPXbXWXAhZMg0DVxihWkC08aWEMv34zXqDLk1RoImKeVitWuMR3UO
      OwXcdpO64yF8F2VGbtwgMbJwmk/ICl8xNvhEpEXE0DjUmyYTDfdVWUsjhs/FZuiyQcgvenL+
      JL/ZG3RzLbe4bnbvK7ZrLB7jTPB+UJEEiyPPklybppMOM4Xt7BDfnJ3jt+12VyUONskJe80K
      kagVlip2N6X5uM0vOk3+be9rnG8UcTUTkcxBqofpayX+/XITT4vvK0YlkjneiX8JPJc3241w
      M6ibGBsLfKJzkYiho0mYq7b49+IAn69OkdAFT2fDH9h1AzzXIxa3tvx3gaDSdljsGbq1do0Q
      JKIWinY3EibQNQ1HBXhWDIKAqKER0b0t0uArMYcLC5dwx47d1bMfmP+AY36BXjq0LYNvxZ+g
      nevHmzrLUHUdzzJ4ZTLPXKVJwkyStg3q7Q7PGUUcf51KPeDfeM+ECc6ty5fMPfE5Zj2H0vQ/
      8JlMAHq45e0EGlHNAyE51p/mldV1fui5oGlMrpzjV7MOiFBA4caw5+5ntDdzGB7zPMB+CKIp
      mtHsllqzEIJCYpDrhTJjqk7MDHk2fiC6va523/zmLLsJFcB/aPfS6hkLWwlF4luzVCM7QjE3
      QTk7esu4phDd1kNW2IRCCIFeL+JXivyhGOdKS/LD1DG8/ChX0wcpVqqcaRv8yEmiKkUGbA3T
      7JZQCvACxaXldVbXCvjDR/Y9txACFq+x0Ia64zEQDY+hOy3et4fJrE/xG6nWVmE9Ai6sVTkX
      G0UmMqhOqxvqvP0Y6CnP80vpDr1Rg4GIhli6zll7EDeaQnPbePlRrk9d49uRQ5zUerlWc/lu
      K8YbXoZBp8RowkSsL3I9OnCT0raQGjMdiVbb4EBco9Ts8MHCGsNJFU3ZAAAdoklEQVTp6NZK
      Ph7RyK9eYqwyzZdSLhFT70b9dtOvRXfK2Ktm5KaE5W3v+jGFiOwmhQlNY270Bf716hT/Q2eK
      uGFsaQQptotods4EYcJK4AQezUj6Fie7t1R7Jz/G6/lRhNSY33k4KVkZf3Hr/9+qjzJR+Qkx
      FK4XcKXq8iPRx1M9LjipXefP+Q10FNLr0LRTtIVO9fCnuILNxOxJnqdJoHyimkQPXBp9B/jB
      4iqvphS6DAdAKhEnoUNDBSEXSGo3JZL2wszQs/y/i6d5jTVqgeS0nkck0gghiSwpuPY+l46+
      hisM/NwAM4ThW6UUf+Qeor9wlU8xjXTbqD3o0TKVI1NroZTBDxsR3ksN481e5Jm+BJmIiaYJ
      ns5Fw/3VplQM26zaGwd8qG60o63sjRwiPqIrwK3gRpJYq9NMxEIdoV3u4dZSGOYKgiAsTpdo
      nG4Kmqm9yVf3irBu+fbPVgUBA4WrXGxJ/lINc6rvOWqZYUqFNRpjT6N2zJbRwjRy7iIb509y
      KG2jL10lb0KussjStctMWhJbM7mwViHd24s/cx7HjDKzViRrKOKmTt7WGWks836hSd6t4Gom
      gb1/Ac8WpEYlNcgZe4hLmYPUo9mt7jN+/wTy0HNUrORNxUZCCISm00j2cTEyiIokUKuzKM/Z
      vak1TGLFJZxGnZOxCVrDT3Jdz3BtboHrNY/S2ipjuRTbLMTNtPkNs/0ul+dWq7b46K4A+0Fo
      Ov8w8hnWF0/xq+k2BN0hL0GoLrGuW3W0GR2qtDusJx7s4L8rmDZ/0/cyIp0P76H78sbhl/dY
      fQRa4BKxbcqLs1QrZWhU0AyTSrVCpWURN3Qs5bFy+Ry1conY0AjXj/48R+e/T388PN5gzOJL
      Gxd5W+snyB/gTiGEgE1jiW8bZt2Hun/7SrAt48j2gblb2EsIybsHP8+7SqFmL4SOTM8Q6z1D
      FDyX5vJZDjZWGIiZBF05y82s342Slpu07PC33z0JBUGwtQp87AwAANPmzPjLVOff4yvGBn22
      gVTd/mHdyrGd4yodMcnV1lnP3LsRRKSgtYeg7Z1ASAndwb/7jT3Chv3jaAOjpAAR+ESdDloy
      TVCv0JsZIutNE43ZZN0UDJwgHii8eILO6hqjCZuW4/HH5SizVg6qJb7UW+Ub/sMtYt+rIkxY
      UVSrjtL0XdIum4NVTD61+/O6wczwc/ybeglZLZDw2uRUk1dkkeGEiaVrKNSe2q6+F96fEGJr
      7RBamAn/eBoA4WwyO/oi/668zC+W3udw3MQ2ZZclqrbYogC+r/CFZLi5gsz2UfHDnsNSQM6t
      UbOSdHxF09+7fl4DbCmIamJH0+ywkqujwrxxxpDUvADnDm0kqBZv0jAFKCqT4s5jmDFoQ9ZO
      M+pPkU9GAEUTjRnfDgeeByKe51tLM0SbJa73H+drpfe5YnqsdnSCZh3ugQh3p9ivHHK/1/c9
      jhD4iSx+IksRKAJXWg1SpXleqF9n1PCYzMa3JGm2vmcYuwxDKUXg+/BxdIFuRDs9wJ/HsuSX
      L/DPRIG4qXdngc2nJGi3XeSVU2j5PiLFLH0Ri1KxSK1apdZucvDZT3D9wlmiJ77MmtqdBzBE
      OLidAJKapOX75E1JxQtI6ZLZto8htskTeUNSdAPiuqByCy2ivQb/rZCYOsny638Hv/xzKBXw
      QRDbNcCUFeHU+Kskrr2D0g2ymodu6FzRM6j8EGJLiOijBRGJUY08wfeDw8hmlaHyDK8GqxzL
      mGzuEW7UfFXdTGXg+4+HPPqDhD17FnPp6u4XDYu1kWf4ej2KrxRe11f1goBGq0Ol1UYYJn67
      RadRZ3l2Bq/VwB4+SHzkAKW1FXzXCSMmN8BVsOYElL2A+Y5HK1AsdXx8BRUvPI8pQ180pUsM
      KYjrgqQm76oE8XZwhp/kCy+f6PKJAp6RVVS7sftDvsdEbRGtWuCdtQZDRsBLZgOtVoIrp1Ce
      +wCv6M6gggBVK3XFu0JJF/3Kqd2f8dyQcu3vX/olpETF08wPPcMf977Kn61Aax+5v02DkJr2
      aLtEPgoo3wO3s6tkcAuey9Pzb2M3S+h2lJTf5IqW4xW1xt+MvIYZS+ARhg+RGu1u1xlbBPi+
      T0OatIO9h+1eIbbd53YQCDTDQOtyZ+pdd0k1Klvtju75vjtNckuXeNFb4QOjj7o0qaeHEDes
      JMppIwwLNXWaFzuLnDrweYQdDd2CuUvI0SN3FLl60AhKq2j1En6tjJbuQQ1ul6wGZ17nVyIl
      /i52FH/wzkpZlVK8dOU7/NKAcatA0MfPAG4H5Xv0XfoRK4PHEW4bJTUSlRW8WAYvCPAjCQ4O
      9rF8/SoNMwa5wdsfFFDtZsic3KfQRhVXwuRP4u5cm7uF6vZLVm4HOXMedej5/T54U6ZcVTZQ
      TguZH36o17gftIUrBGtzqOe/sH1NSpE6/W3+22HB/+5N0h64A2p4F6K4zO8232c0tb+418d+
      D3AjhKazduzzO3YAUM/08Y9nv8XRTJSmE/Cjv/5TvvLkIUxp8CezyzQ0m0qsBxVN7Cv7fZOA
      1o3vZx9NmHVrQDsd4u0ytf0/eDMzM5mF4D4qzO8T/vBhGL5BVa5SILV0kU7fYaLtCjc7oftD
      ZQd4szLFKM6+n/mpM4CdUF1lBGvhEhMJE10TxE2DL7/4NLqugVD880iDQNWpdpY5vWLw3eFP
      78ukNCtrHC9e5kz2Cdxk7kNxJbZgRylnx7irtb2bsHqcoDyPE+P9/O3lRYqWj5rYXzRsL1zJ
      HmK2foax+N5P4vG620cMtb5AZGWK38j5NFyNuKWDCNB1UMpjU21OosjYBi/gcHLhPI1IGjfd
      h2xWt4pBkJJjxSv8Wi5gpPQBxaLOJS3DRiyPn+4FBF1t9+3CX4Aub2jrmpq1Lp/o/txSoelo
      Q3ee4HoYUEpBu7FvuDNYmUH0jt6SlWq2qkzmc3yrk0H135la3U44qT7+Zl7w636T/mT0pkDX
      T90eYCdU4KNq5TC6Y0WYLF3nSXeNT/du+oyymzzbHrCeF7JLlqsNMlGb2bpDIAQlZXAipRHr
      skw3axPKHYe1epu5pkfNTnFcNpAqwHE9rpQanJz8bLgviMQRQhC/8GPKHQft2KfBuDOO+34Q
      5bWQfnwHOqgPDO0maBrsQRu/EUF1I3xImo6M78PF8hzM8iqd3PA9PQulFGNnv8WrdpP+VIJM
      dPec/1NtADdCuR1+eea7PNdjY2jyJt2rUIgrLLBRXSXcTRKWFAKUBLEtda5p26H1atvjT6dL
      qL5x+hqrrGgxirlxOplBguJqWOuq6Vvn9Jem0IYObAvuds9/F20MwGnjL1xF2FHk4AGU0wG4
      JxGsO8WdGJ3yPWhWefLy97lk96PGjyP2M4D7hOq0SFx5i5HVi/RFLI6P9JFPbO/XfmYAO6CU
      QqttEKmvY7gdUn6T50SZZzMGugwNwnHB0AVeEGBqIfU4zPpuUizkVg1yOPhD8h0KXt/o8K2B
      l8nNvk8ylUJrlGm5HqlMlkajgW3bBEIiupGcWqXE6IFDLM5ME4nY+D2jTNl9t7yHve6JThNh
      x1BOO6Q+34UA1q7jeC7CczCLizh9kyhNh+lzMHH8jmdn5Tpw+h84FvX5bErxr9KffiiDXylF
      //J5vuAtkPQ6XFwrcTibJGVbW+WnlmX+dO8BboQQgiDZQyMZdjcpAzNOh9fXrzHYKRL4AVdj
      w0QbdVp6lMOdVfqCJkcsn/5EZEsLKFAKTYgduYGQrfhyVidX+DEr7RqWVyDud3ADxYWlCnp2
      gE6tjBCSVrWCDDxqHYdC4FLbWCc6Ms5qvP8ul4Dd5LX7aacULcxyYvEtEqZkw87yk3IckRtE
      jd66H1hq9gxOPEMrF4qRCcMk6Bvl6dZ5/lI+cd/5j/1gbyzwO/oyqYSF6xos11tkUnEsLRTv
      kl3hgZ8ZwG0gTIuNwWNsAJs65ptBtbMc4oxS/H2txIHiVT4tNhiKGkSM3RqlqluoLIXicFzj
      iWQPKgjQNA3P97ky30AlMjjrS+T7B3EGD2OnMqh6Hc+yiPk+TiRG01PQqGBWCyTcBhuDR0My
      mdsJfa6behncmt5grM7g2TGCeHcj77TAiiIra+ieA56L0zOM0C0aAfzg8JfB98JNuhVBrc4i
      ekcJNpax6+t0+g6ESbVuxlyYNu14FtWq73oWuufwZ8Ew/sDR+9rj7Avf47XaZZK5cHivNZqU
      Wi2ut3ySmse8qzFiOEykP0qqEI8D9vixhBCQzDKVfIlr7QaR8gpmq0lU+MT8Ng1h0K/aHAgq
      +CrgjMjQ06nyUlqjNxpSsgue4EThAk+ORElaTX5cOM+3zVfpLRf4VGeGD9woFyZeJrZ6Gbk2
      gxWN8auRMmdmNxCdJouOYG78E2EM37QxC7O81J7DImBOxJmLDdDJDqEqG6GRmDZavUhq9n3c
      UgHNtMNWtUqQzORxNxZ5bjBHSdqci8cI0r3052IsRdJogYcA8n4Fd2SIDS+gomkEZhRVK4b5
      EN9DOR2EaYfN0HdGvWolAisa+v0PKUwsymuoTpM3CgbFWoNVEaEge6kPfi40YDtGrLzMr5fO
      /GwP8KigfK9blCBQlXU0KRkuzzLslJhuw/Khl3lm5TQ9S5c53fMEG+PP8drsD/lCXucPFjoc
      tuHFnEnH8/mPCw6LRorPeEs805tiulTj6/FjiIXLeELjXx6yiJkGm9vnhuNyti6w/A5xEfB6
      w8RsVXCiaabSkyRwGU7HsQqzOOUCG6US6UyWWDJFaW2Vw08colKtkx/K8+7rb5NMJsOCcjtG
      o1Zh7eXfovHh5c9ugurK8wmphf0H9gizGgJGL/z9zwzgcYBaX0Jk+8l6NVL1NRZVBM91OVae
      QngO58xe/sdkgZil03I8LtQV08SZMbL0uDXmRByGDgACub5Ir1tBOk00w6QnaJGnzRUVQ0md
      mjTZSI8grOiu+HyfLRkuXkd3W3h+gCYFzaUZoqbkwOEDrK4soUSE9baPFYnSCUD4HrqmcWng
      WZqPkQHcKSz5syjQYw+lFCLwSK5cw5UarpXATfXuqdm5la8I/K2M7qYmJ109n9tRng18YuUV
      XqxcJlpZo5Xvgd5R1vUYs0GaItHbHuOjhJ+qPUCPcEi4dRzdZpko2aBJRwvDYlJAxduRkSV0
      IO6ugeqDhxACNIPq0JPbr93wGaO2wXPr50jgolRAQ+m83f8CKprslgbewQSnFJmVK5xoTiE7
      TV4ZyXFNxflW7jhLIg/BLURyP8L4qTKAvms/ITY0weLb3+LF8QncZh3DiuB02kgpqTWa2NEY
      uZ4eVgsF8r19/Ch1d9o5HwaECsjRISddhmMGCUvQs/oTzhl9zI48d2cH2VjiXxizRPMRFDau
      r/iR7GfZ7H+gdQuPGz52BTG3gogmsFoVBsfGCVoNrIEJzM2G20qRSaUwTZPi0jw0q6zMXv+w
      L/mO4CTzfGPs5/iDoZ/n//YnuFbzeDlv8Zv2Oqnly7f9vlKKRHV16/+uH/CH5ShTw3doPB9h
      /FStAFeHnieihTRgQyg6StDbe5DljkCXobuT0sBVinYgwuZrH5Gm56Kr7VPpO8SfVJK8WDiH
      RNDJ7KYkbNYL7IRx/TQ9a5dZknHeIMWKlaY6euieu2h+lPBTZQCdADqBYjwq4eS3GRkZx9tY
      ZcBKYEejBJpBdfoirQMnwrY7H1G0Un38KBmqSG81jlABanmaXGme4tHPbr8eBMQCh6knfo7r
      lr0l//hxdnt24qfKAHbCL67Qchtous7ahQ948qlnqJRLyFbrw760B4K9eoiJdC/Fnm1Wpba+
      wOTcu7QSecrJ7GNXC/Ao8NDDoJroauTv8Z4EdHx8oe36jCVDystmswVd+Sgh8R/QvBTVBH2q
      iR8EGKaJ0wo3v54Cr9VgQ0/QVB//5Z9WA1AoO/ZQIjwxqbA7dRwrTi0QYaa6K8GolCIhA6RS
      VNwA3DZydQ41cfyuz6OUQhUWkL133/zwoZp82hAMXPkRuYkjLLoayvcxdA1pWjitFgoYXL9K
      R7fxe4Zp2Ulo1RlrLrMubIp6Aj0SZVDVWa40uZq+996+O9H0FdN0VckcQEtBp/umltrbWj+O
      6OqrPix3J9Yq4V8+RW8iTlJpaGdPoo8fxhCCzPWL1F/4JJ5S9H3/mxw0Jd999ot4teLd1017
      bkhxuAc8VANISp+6p1BTF7FbdXQ7io7PysICA4ODlJP9+IZNcWYKbfYqxWKRXC5He3CQ2XNv
      MDQ6huv5NNIZTGnCw6GM/wwPEZF0DpplYudPE5uf5pXCNJ1anYbU+WB8EteOoF56lZO1Fl89
      9Xfk3m7zF6/+NuUDz93xqiQMc6u7zd3iobpAhoCh0jS2ZeA4LqrbAFpKDddzUdEUE+4GK3YO
      p1ZGt6J0mnV6e/uo1arE4nG02fMIFbCeHOJq+v9v78yao7iuAPzdXmbRjCQEWsAgFhVlFtkY
      gx3jxDZ2ubwktkOcOE5c5cpLfkGe8jdSlZdUKpVKxUkcJ6kyweXgBBLbbCqzY2EWgQVCaAEh
      MZJmRrN0981Dz2h6ND2rVqP+VKLonr7drZpz7rn33HPPWdwtfh7VsUKkEQPXaVy3kVj3aQLR
      cURdiIbbN7jb+QShji0oiRim5idiKWz47B+80neeCTQuNbQyFQjT076dyJYnMjvM5HQtYxkb
      x7pzC7XjUaS0ag6sW/BQiLAqWRO/S7JxNQ9FbzPeuJaIITCkpNWMkjYtRvUGRjM5mhp1gSIl
      MZOK0wp6LF3qVDDiMYzRYczW9XaAoLRQRwd58ejfeHxyOHNl1nsF1wL1jPuCJANhuvb8gJb+
      y2iDvQzs/TGKabLr6Aec+dYbyJbqt00uuAKs1CRtp/eDhMamFfT39bFixQpQNWLxOH5VIbR2
      E2dX716wd/JYGHxIwkf+wo6BXnZORRhCwQAUIWjFpIIE7dyXCo1YpIFreogTnXt598JBBrQg
      H771S7u4SRUsuN/LRBBeu4mpRAK1sZGwIWhqa8NSfST7+2hY2URUqX3nksfSREqJr/ccL/d8
      yUMYaCpsqDjSKmv6BU3CbuMHOtMxtp3/F6aAz3d/t2rhh0VQgHEDTrXszJ1o2Mb0Yv0Wb4z/
      oFI3cI2fHPkrq1SL7PAmm5orV9zCbYybKfvp4qsSAhQJt/Q6Rjt21uTNWn4rHx6LQtvtK6zC
      3jQgZoSguZU3Ko9gQtG4sHI9d9rawV/bqMFTAI95Rx0dpHlsKHNUbT8tHG2cCWLgsw07ubz3
      7UxGjtpWM5bBcqfHfCAiIxUtPknT4PnDf+CF4Z7ZPI18xbHrgwXG7qBcv4CIjKBf6kLWkNfU
      swAeFaMO3cAINYBQ2PfRrxlpWkNv+zaGduwt2gOHe7vZGh+z8yRV1N86it9ljvMqe07PCUAL
      BrHaH+aREx+yZvgGhzbvAl91Hk1PATzKItMpkJLQ6CAvHfo9mmWyQabZOtLLnpFeDsQnuPbU
      6wXh08rIbd49/j4hcuVqAYoVrS7s5QuvtecLEBEqF3e8gAiEGNrYSSoRRzGSyCqz3nkK4FGa
      VJKWs4domorSGh1ls5mfoFwHXrtyjA/qGgosgVBUEmg0Trs73b05zjrOmZYllAQkgoOdz5NY
      a9cKGOt4nNFNj5VsUwxPATxK0nHmE966fCwnui4yFkCy79xBfre6Az01RRKQq9ZgNrXx3+3P
      8s7F/2XqNbsLf8425BRgZlFzJ4NCp3/rnrxztYZCeArgURTf0A3u+ELEgVCRzjUruoqUNPee
      5Z0rx1Gl5IYaZNQfwG/NKFZeEe6WIkuzlWb9xWP0PflKTXlOnXhpUTwKEEiahq6w/vgBnpsY
      wY8druCGnSxeEEPQ4wvyeCoOZEL/M5JfykPpnNQ638D+t3hDEzjdtJZjz/0UYxbVdzw3qEcB
      gf4efnj4PZ6ZuEeA4sJvY4/Xw8Cu1FTmKCf45dzzosDF6TxfHBV46v4AP/rkt+iDvSiWhTU6
      7FoouxSeAngUUBe5S8qwCIkSVS9xhjDMDltllIybtLrx0sbkJD//929Y17Ufpf8q1e5m8uYA
      HjZTUaSmI3Q/kXVbsM4cBFl8Yck5dLEnrHZfKiUkpUCrUTlq8eQ0Inn7ahcTQuHEvT4uP7IX
      o7W9oqwWngIsY6S0EOk0+Py0XD3JY9fOMNjSTiSVwLKMMp2xu4AbUjBuqDSpC7t5QxXQhMVr
      /d0823+Rjx99kb7dL+fXXzNNtJF+jBWt01U9PQVYxqy6cpK6yF1uP/19wrFxdkXvsjt61/6w
      pNcn567MemycPvwmzUSV+Z6c8otgc0cDkje7D/N3IRjY8bxdnxkIXT1F6/ANbj71velrPS/Q
      MsXfd5l3Pv0jKU3n/X2/wPIFeGP/r+iMj5Vs5wxdFiiORSzbG5QVcNOUqOriKEAWS8ItRWW4
      vpmvtuzh3rY9SEXNswqeBViGhG5d5u0jf6ZVGsiUwcPnDjHQ1oFipMu2zQlweVdl8bYLgyJg
      ozTZOHGHJ0/9k/dTUwzsein/mgV9I48lwearX9BqZCpGCnix9ww7vjrC1mTRuvIlqcQb5Cb8
      MvMzH0gp81yiKvBq96esPnsIaRqZtPFejbBliTUjA1y9tHh2fKimBEG5OUHp+J3Sd3DOKWzi
      pkpQsWpYRXbceUaJtGYrzc8u/IdLV7ro3rQTNZX0FGA5MrC6g/TNC+hzOCKpfXjj3OSScatK
      QdxS0IXEJ+bWQgigMznJ9itHEXhzgGWHlBItlcKuojUzDKHWXrw24c9/Vm5/sBCSZs0oWEW2
      pJ3BWysTl1TJ35C9wlOAZYSUFptOHOD1a12ZnnX2vWt+KMPc3E8CiMKAuISlYEioVy0kzGp4
      lMVTgGVE+Pp53rx6HF3MTEdSjUdHOGL3ndkc5mI8Za8rFHuPoGK/d0IKJk2VVZqBw9NatF0p
      y+B5gZYJMp3iO+cPo+f1rNkYHOHYrigcv653cghU9bE7ORzPyOqSSyBbxlljt8gE1+lCIoCk
      VY34Sty8Tp4FWCasP3eYR6MjBX78/N5/pjDnFrjyyW1fybarzJ3pZmkEsXgcw7QIBPwYRhq/
      34dhmCQSKfx+H8lkkvr6EMlkCl3XMC1J0Eih6wpUVdOg0FJ5CvCAI5NTrD3/KfsufZ75sp1D
      mPLDHreN7MVFXbj8z/mp+7MsS2IYBum0SjKZwjQtfD4fQtjpTixLkkikiEZj1NUFCQT8JI0k
      Samg6arjHfMn9Dj+RlnwuY2nAA8gUkqIT7Li5kWe7v6czvjYtOdEuPbC1eHWttg55zpBMUKh
      ICHqEAL8Ph1Ns0NzdE0DIWlsDCOEwOfTUBSBUBTC4boSb2cLv7tVkg7L5SnAA4FMxFn71XEm
      AmHCU5OsH/6aTWODtBsJe5IoZi/0s6O0ezWZSmOkDUKhOlRNdYz5Bam0CVjoupaxCArSygm2
      cPT0bs91TqxzViCnBJ4CfIOxJu+jTkZ46eQBdo0NZlyHDmGowEMy31TyXJ+uY5kWkcg4mq5j
      GAZ+v46VEXTTNBFCIRaLoarZwE2BqgpCoeCMp4m8o+LYKuApwDeBbFxLZkzMVJStJz/m6Ztf
      Um+mCGKfz41484cei9fzV4aiCPx+H5pmR2qKgB+h2BbANO0lO4HA5/MRCNihzdkJsk1lFi5n
      BXJ4CrDEsO72gxAoLevsYK3+HrZfP03z2BCmUJjSA7RPjrI5FQUySuEiAG5f9lJFCIGmqaia
      PZl1TtKV6dUugaYHyVq4UF2wonyg+UOfQhXxFGCJIZraEJoOqQRbuz7i1a9PEyj6PZfv8b55
      OKeu+Sqc53IVsohIl773TDwFWGII3YeITfDM4ff49titslkV5gMpYcoS+BSJCovwDoVpUgpr
      CeSOZhO/5CnAEkIaaeqvn+eF7s/ojN5btPdIS1AzUZgmCyMk1e4LyO5Gq6aF2/qHpwCLiZTI
      6H1E/UqCt3t4rms/j0yOzmmYci34FjhAxj05ljuVe3kqa+MpwCLS0n0U0zK5v2E7bxz+Ex0y
      OTcxZYuMJSFmCcJKYcRmfjmkyqJI53Mu4wXDLRLSSLPz6hcoQmHzqUNssJLlGy1xpISkBRFT
      KbP261SCcotY89sjaK1apZX6POYSNXaPLc0N+OKDtKlTiE0dFddMXKoYEibNrCtTYqgyL1zZ
      jZmTWjeffi3uXDu4VJadwf8fUwtNX9wQ2+UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
